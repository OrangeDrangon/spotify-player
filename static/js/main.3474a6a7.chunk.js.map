{"version":3,"sources":["components/Tracks/Tracks.module.scss","components/Track/Track.module.scss","components/App/App.module.scss","components/Header/Header.module.scss","components/PlaylistList/PlaylistList.module.scss","assets/icons/close.svg","components/Card/Card.module.scss","components/Modal/Modal.module.scss","components/Header/Header.component.tsx","utils/getUrl.util.ts","components/Card/Card.component.tsx","components/Modal/Modal.component.tsx","components/Track/Track.component.tsx","components/Tracks/Tracks.component.tsx","components/Playlist/Playlist.component.tsx","utils/htmlDecode.util.ts","components/PlaylistList/PlaylistList.component.tsx","components/Personal/Personal.component.tsx","components/Featured/Featured.component.tsx","components/Callback/Callback.component.tsx","redux/actions/setToken.action.ts","redux/constants/setToken.constant.ts","components/App/App.component.tsx","utils/generateSpotifyAuthUrl.util.ts","redux/reducers/root.reducer.ts","redux/store.ts","serviceWorker.ts","index.tsx","components/Playlist/Playlist.module.scss"],"names":["module","exports","table","header","title","content","row","elm","page","section","container","__webpack_require__","p","backdrop","Header","react_default","a","createElement","className","classes","react_router_dom","to","getUrl","_x","_x2","_getUrl","apply","this","arguments","_callee","url","token","response","json","regenerator_default","wrap","_context","prev","next","fetch","method","headers","concat","sent","abrupt","status","t0","console","log","stop","Card","_ref","children","containerClass","Modal","open","onBackdropClick","onClick","_ref2","target","currentTarget","style","display","Track","track","name","artists","Tracks","connect","_ref4","initalTracks","tracks","_useState","useState","_useState2","Object","slicedToArray","setTracks","_useState3","defineProperty","href","_useState4","cache","setCache","getNext","useCallback","asyncToGenerator","mark","objectSpread","getPrevious","_callee2","_context2","previous","items","map","Track_component","key","id","Math","random","buttons","disabled","Playlist","input","data","setData","setOpen","getData","useEffect","cancelled","unfiltered","dataNew","Fragment","cover","backgroundImage","images","Modal_component","Card_component","card","src","close","alt","wrapper","createdBy","author","owner","display_name","description","DOMParser","parseFromString","documentElement","textContent","lineBreak","Tracks_component","PlaylistList","getSimple","playlists","setPlaylists","featuredNew","playlist","Playlist_component","Personal","_ref3","getPlaylistList","PlaylistList_component","Featured","getFeatured","Callback","dispatch","setToken","type","payload","redirectTo","setRedirectTo","timeoutId","params","qs","parse","window","location","hash","access_token","spotifyResponse","setTimeout","Number","expires_in","state","clearTimeout","react_router","App","requestContents","client_id","process","redirect_uri","response_type","scopes","pathname","assign","show_dialog","encodeURIComponent","join","generateSpotifyAuthUrl","Header_component","exact","path","render","component","initialState","store","createStore","length","undefined","action","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","es","App_component","document","getElementById","URL","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3474a6a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Tracks_table__3gkoP\",\"header\":\"Tracks_header__3z6Dc\",\"title\":\"Tracks_title__2jBUG\",\"content\":\"Tracks_content__2y2de\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Track_row__3MYMF\",\"elm\":\"Track_elm__3maf8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__14G2o\",\"section\":\"App_section__1vvt6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2kr8J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PlaylistList_container__2Wtta\"};","module.exports = __webpack_public_path__ + \"static/media/close.84e833e5.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__M67NJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3VE3C\"};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport classes from \"./Header.module.scss\";\n\nconst Header: React.FC = () => {\n  return (\n    <header className={classes.header}>\n      <Link\n        to=\"/featured\"\n        className=\"styled-button\"\n      >\n        Featured\n      </Link>\n      <Link\n        to=\"/personal\"\n        className=\"styled-button\"\n      >\n        Personal\n      </Link>\n    </header>\n  );\n};\n\nexport default Header;\n","import { ISpotifyError } from \"interfaces/ISpotifyError.interface\";\n\nexport async function getUrl<T>(\n  url: string,\n  token: string | null\n): Promise<T | ISpotifyError | null> {\n  if (token) {\n    try {\n      const response = await fetch(url, {\n        method: \"GET\",\n        headers: [[\"Authorization\", `Bearer ${token}`]]\n      });\n      const json = await response.json();\n      return response.status === 200 ? (json as T) : (json as ISpotifyError);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return null;\n}\n","import React from \"react\";\n\nimport classes from \"./Card.module.scss\";\n\ninterface IProps {\n  children: React.ReactNode;\n  containerClass?: string;\n}\n\nconst Card: React.FC<IProps> = ({ children, containerClass }: IProps) => {\n  return (\n    <div\n      className={`${classes.container} ${containerClass ? containerClass : \"\"}`}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport classes from \"./Modal.module.scss\";\n\ninterface IProps {\n  children: React.ReactNode;\n  open: boolean;\n  onBackdropClick: () => void;\n}\n\nconst Modal: React.FC<IProps> = ({\n  children,\n  open,\n  onBackdropClick\n}: IProps) => {\n  return (\n    <div\n      className={classes.backdrop}\n      onClick={({ target, currentTarget }) => {\n        if (target === currentTarget) {\n          onBackdropClick();\n        }\n      }}\n      style={open ? {} : { display: \"none\" }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\n\nimport classes from \"./Track.module.scss\";\n\nimport { ISpotifyTrack } from \"interfaces/ISpotiftyTrack.interface\";\n\ninterface IProps {\n  track: ISpotifyTrack;\n}\n\nconst Track: React.FC<IProps> = ({ track }: IProps) => {\n  return (\n    <div className={classes.row}>\n      <div className={classes.elm}>{track.name}</div>\n      <div className={classes.elm}>{track.artists[0].name}</div>\n    </div>\n  );\n};\n\nexport default Track;\n","import React, { useCallback, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport classes from \"./Tracks.module.scss\";\n\nimport Track from \"components/Track/Track.component\";\n\nimport { ISpotifyPaging } from \"interfaces/ISpotifyPaging.interface\";\nimport { ISpotifyPlaylistTrack } from \"interfaces/ISpotifyPlaylistTrack.inerface\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\nimport { getUrl } from \"utils/getUrl.util\";\nimport { ISpotifyError } from \"interfaces/ISpotifyError.interface\";\n\ninterface IProps {\n  tracks: ISpotifyPaging<ISpotifyPlaylistTrack[]>;\n  token: string | null;\n}\n\nconst ConnectedTracks: React.FC<IProps> = ({\n  token,\n  tracks: initalTracks\n}: IProps) => {\n  const [tracks, setTracks] = useState(initalTracks);\n  const [cache, setCache] = useState({\n    [tracks.href]: tracks\n  });\n\n  const getNext = useCallback(async () => {\n    if (tracks.next) {\n      if (cache[tracks.next]) {\n        setTracks(cache[tracks.next]);\n        return;\n      }\n      let response = await getUrl<ISpotifyPaging<ISpotifyPlaylistTrack[]>>(\n        tracks.next,\n        token\n      );\n      if (!(response as ISpotifyError).status) {\n        response = response as ISpotifyPaging<ISpotifyPlaylistTrack[]>;\n        setCache({ ...cache, [response.href]: response });\n        setTracks(response);\n      }\n    }\n  }, [tracks, token, cache]);\n\n  const getPrevious = useCallback(async () => {\n    if (tracks.previous) {\n      if (cache[tracks.previous]) {\n        setTracks(cache[tracks.previous]);\n        return;\n      }\n      let response = await getUrl<ISpotifyPaging<ISpotifyPlaylistTrack[]>>(\n        tracks.previous,\n        token\n      );\n      if (!(response as ISpotifyError).status) {\n        response = response as ISpotifyPaging<ISpotifyPlaylistTrack[]>;\n        setCache({ ...cache, [response.href]: response });\n        setTracks(response);\n      }\n    }\n  }, [tracks, token, cache]);\n\n  return (\n    <div className={classes.table}>\n      <div className={classes.header}>\n        <div className={classes.title}>Song</div>\n        <div className={classes.title}>Artist</div>\n      </div>\n      <div className={classes.content}>\n        {tracks.items.map(track =>\n          track.track ? (\n            <Track key={track.track.id + Math.random()} track={track.track} />\n          ) : (\n            <div key={Math.random()}>Loading...</div>\n          )\n        )}\n      </div>\n      {tracks.next || tracks.previous ? (\n        <div className={classes.buttons}>\n          {tracks.previous ? (\n            <button className=\"styled-button\" onClick={getPrevious}>\n              Previous\n            </button>\n          ) : (\n            <button className=\"styled-button\" disabled>\n              Previous\n            </button>\n          )}\n          {tracks.next ? (\n            <button className=\"styled-button\" onClick={getNext}>\n              Next\n            </button>\n          ) : (\n            <button className=\"styled-button\" disabled>\n              Next\n            </button>\n          )}\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ token }: IState) => {\n  return { token };\n};\n\nconst Tracks = connect(mapStateToProps)(ConnectedTracks);\n\nexport default Tracks;\n","/* eslint-disable jsx-a11y/heading-has-content */\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport classes from \"./Playlist.module.scss\";\n\nimport close from \"assets/icons/close.svg\";\n\nimport Card from \"components/Card/Card.component\";\nimport Modal from \"components/Modal/Modal.component\";\nimport Tracks from \"components/Tracks/Tracks.component\";\n\nimport { ISpotifyPlaylistFull } from \"interfaces/ISpotifyPlaylist.interface\";\nimport { ISpotifyError } from \"interfaces/ISpotifyError.interface\";\n\nimport { htmlDecode } from \"utils/htmlDecode.util\";\nimport { getUrl } from \"utils/getUrl.util\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\n\ninterface IProps {\n  href: string;\n  token: string | null;\n}\n\nconst ConnectedPlaylist: React.FC<IProps> = ({ href, token }: IProps) => {\n  const [data, setData] = useState<ISpotifyPlaylistFull | null>(null);\n  const [open, setOpen] = useState(false);\n\n  const getData = useCallback(async () => {\n    return await getUrl<ISpotifyPlaylistFull>(href, token);\n  }, [href, token]);\n\n  useEffect(() => {\n    let cancelled = false;\n    (async () => {\n      const unfiltered = await getData();\n      if (unfiltered) {\n        if (!(unfiltered as ISpotifyError).status) {\n          const dataNew = unfiltered as ISpotifyPlaylistFull;\n          if (!cancelled) {\n            setData(dataNew);\n          }\n        }\n      }\n    })();\n    return () => {\n      cancelled = true;\n    };\n  }, [getData]);\n\n  return (\n    <React.Fragment>\n      <div\n        className={classes.cover}\n        onClick={() => setOpen(true)}\n        style={\n          data\n            ? {\n                backgroundImage: `url(${data.images[0].url})`\n              }\n            : {}\n        }\n      />\n      {open ? (\n        <Modal open={open} onBackdropClick={() => setOpen(false)}>\n          <Card containerClass={classes.card}>\n            <img\n              src={close}\n              alt=\"\"\n              className={classes.close}\n              onClick={() => setOpen(false)}\n            />\n            {data ? (\n              <div className={classes.wrapper}>\n                <header className={classes.header}>\n                  <h1 className={classes.title}>{data.name}</h1>\n                  <div className={classes.createdBy}>\n                    Created by{\" \"}\n                    <span className={classes.author}>\n                      {data.owner.display_name}\n                    </span>\n                  </div>\n                  <div className={classes.description}>\n                    {htmlDecode(data.description ? data.description : \"\")}\n                  </div>\n                </header>\n                <div className={classes.lineBreak} />\n                <section className={classes.section}>\n                  <Tracks tracks={data.tracks} />\n                </section>\n              </div>\n            ) : (\n              \"Loading...\"\n            )}\n          </Card>\n        </Modal>\n      ) : (\n        \"\"\n      )}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({ token }: IState) => {\n  return { token };\n};\n\nconst Playlist = connect(mapStateToProps)(ConnectedPlaylist);\n\nexport default Playlist;\n","export const htmlDecode = (input: string) => {\n  const doc = new DOMParser().parseFromString(input, \"text/html\");\n  return doc.documentElement.textContent;\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport classes from \"./PlaylistList.module.scss\";\nimport Playlist from \"components/Playlist/Playlist.component\";\n\nimport { ISpotifyError } from \"interfaces/ISpotifyError.interface\";\nimport { ISpotifyPlaylistSimple } from \"interfaces/ISpotifyPlaylist.interface\";\nimport { ISpotifyPaging } from \"interfaces/ISpotifyPaging.interface\";\n\ninterface IProps {\n  getSimple: () => Promise<\n    ISpotifyPaging<ISpotifyPlaylistSimple[]> | ISpotifyError | null\n  >;\n}\n\nconst PlaylistList: React.FC<IProps> = ({ getSimple }: IProps) => {\n  const [playlists, setPlaylists] = useState<ISpotifyPaging<\n    ISpotifyPlaylistSimple[]\n  > | null>(null);\n\n  useEffect(() => {\n    let cancelled = false;\n    (async () => {\n      const unfiltered = await getSimple();\n      if (unfiltered) {\n        if (!(unfiltered as ISpotifyError).status) {\n          const featuredNew = unfiltered as ISpotifyPaging<\n            ISpotifyPlaylistSimple[]\n          >;\n          if (!cancelled) {\n            setPlaylists(featuredNew);\n          }\n        }\n      }\n    })();\n    return () => {\n      cancelled = true;\n    };\n  }, [getSimple]);\n  return (\n    <div className={classes.container}>\n      {(playlists ? playlists.items : []).map(playlist => (\n        <Playlist key={playlist.id} href={playlist.href} />\n      ))}\n    </div>\n  );\n};\n\nexport default PlaylistList;\n","import React, { useCallback } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { getUrl } from \"utils/getUrl.util\";\n\nimport PlaylistList from \"components/PlaylistList/PlaylistList.component\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\n\nimport { ISpotifyPaging } from \"interfaces/ISpotifyPaging.interface\";\nimport { ISpotifyPlaylistSimple } from \"interfaces/ISpotifyPlaylist.interface\";\n\ninterface IProps {\n  token: string | null;\n}\n\nconst PersonalConnected: React.FC<IProps> = ({ token }: IProps) => {\n  const getPlaylistList = useCallback(async () => {\n    return await getUrl<ISpotifyPaging<ISpotifyPlaylistSimple[]>>(\n      \"https://api.spotify.com/v1/me/playlists\",\n      token\n    );\n  }, [token]);\n  return <PlaylistList getSimple={getPlaylistList} />;\n};\n\nconst mapStateToProps = ({ token }: IState) => {\n  return { token };\n};\n\nconst Personal = connect(mapStateToProps)(PersonalConnected);\n\nexport default Personal;\n","import React, { useCallback } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { getUrl } from \"utils/getUrl.util\";\n\nimport PlaylistList from \"components/PlaylistList/PlaylistList.component\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\n\nimport { ISpotifyFeatured } from \"interfaces/ISpotifyFeatured.interface\";\nimport { ISpotifyError } from \"interfaces/ISpotifyError.interface\";\n\ninterface IProps {\n  token: string | null;\n}\n\nconst FeaturedConnected: React.FC<IProps> = ({ token }: IProps) => {\n  const getFeatured = useCallback(async () => {\n    const response = await getUrl<ISpotifyFeatured>(\n      \"https://api.spotify.com/v1/browse/featured-playlists\",\n      token\n    );\n    return response\n      ? !(response as ISpotifyError).status\n        ? (response as ISpotifyFeatured).playlists\n        : (response as ISpotifyError)\n      : null;\n  }, [token]);\n\n  return <PlaylistList getSimple={getFeatured} />;\n};\n\nconst mapStateToProps = ({ token }: IState) => {\n  return { token };\n};\n\nconst Featured = connect(mapStateToProps)(FeaturedConnected);\n\nexport default Featured;\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport qs from \"query-string\";\n\nimport { ISpotifyTokenResponse } from \"interfaces/ISpotifyTokenResponse.interface\";\n\nimport { setToken } from \"redux/actions/setToken.action\";\nimport { Redirect } from \"react-router\";\n\ninterface IProps {\n  token: string | null;\n  setToken: (\n    token: string | null\n  ) => {\n    type: string;\n    payload: string | null;\n  };\n}\n\nconst CallbackConnected: React.FC<IProps> = ({ setToken }: IProps) => {\n  const [redirectTo, setRedirectTo] = useState<string | null>(null);\n  useEffect(() => {\n    let cancelled = false;\n    let timeoutId: NodeJS.Timeout | null = null;\n    const params = qs.parse(window.location.hash);\n    if (params.access_token) {\n      // We know it is this type at this point so we cast to it\n      const spotifyResponse = (params as unknown) as ISpotifyTokenResponse;\n\n      // If the effect has not been cancelled we set the state\n      if (!cancelled) {\n        setToken(spotifyResponse.access_token);\n        timeoutId = setTimeout(\n          () => setToken(null),\n          Number(spotifyResponse.expires_in) * 1000\n        );\n      }\n      // Removes tokens from the url\n      if (spotifyResponse.state) {\n        setRedirectTo(spotifyResponse.state);\n      }\n    }\n    return () => {\n      cancelled = true;\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [setToken]);\n  if (redirectTo) {\n    return <Redirect to={redirectTo} />;\n  } else {\n    return <div>Redirecting...</div>;\n  }\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return { setToken: (token: string | null) => dispatch(setToken(token)) };\n};\n\nconst Callback = connect(\n  null,\n  mapDispatchToProps\n)(CallbackConnected);\n\nexport default Callback;\n","import { SET_TOKEN } from \"redux/constants/setToken.constant\";\n\nexport const setToken = (payload: string | null) => {\n  return { type: SET_TOKEN, payload };\n};\n","export const SET_TOKEN = \"setToken\";\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport qs from \"query-string\";\nimport { connect } from \"react-redux\";\n\nimport classes from \"./App.module.scss\";\n\nimport Header from \"components/Header/Header.component\";\nimport Personal from \"components/Personal/Personal.component\";\nimport Featured from \"components/Featured/Featured.component\";\nimport Callback from \"components/Callback/Callback.component\";\n\nimport { ISpotifyTokenRequest } from \"interfaces/ISpotifyTokenRequest.interface\";\n\nimport { generateSpotifyAuthUrl } from \"utils/generateSpotifyAuthUrl.util\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\n\ninterface IProps {\n  token: string | null;\n}\n\nconst ConnectedApp: React.FC<IProps> = ({ token }: IProps) => {\n  useEffect(() => {\n    if (!token) {\n      const params = qs.parse(window.location.hash);\n      if (!params.access_token) {\n        const requestContents: ISpotifyTokenRequest = {\n          client_id: process.env.REACT_APP_CLIENT_ID || \"\",\n          redirect_uri: process.env.REACT_APP_REDIRECT_URI || \"\",\n          response_type: \"token\",\n          scopes: [\n            \"streaming\",\n            \"user-read-birthdate\",\n            \"user-read-email\",\n            \"user-read-private\",\n            \"playlist-read-private\"\n          ],\n          state: window.location.pathname\n        };\n        window.location.assign(generateSpotifyAuthUrl(requestContents));\n      }\n    }\n  }, [token]);\n\n  return (\n    <Router>\n      <Header />\n      <div className={classes.page}>\n        <Route exact path=\"/\" render={() => <Redirect to=\"/featured\" />} />\n        <Route path=\"/personal\" component={Personal} />\n        <Route path=\"/featured\" component={Featured} />\n        <Route path=\"/callback\" component={Callback} />\n      </div>\n    </Router>\n  );\n};\n\nconst mapStateToProps = ({ token }: IState) => {\n  return { token };\n};\n\nconst App = connect(mapStateToProps)(ConnectedApp);\n\nexport default App;\n","import { ISpotifyTokenRequest } from \"interfaces/ISpotifyTokenRequest.interface\";\n\nexport const generateSpotifyAuthUrl = ({\n  client_id,\n  redirect_uri,\n  response_type,\n  scopes,\n  show_dialog,\n  state\n}: ISpotifyTokenRequest): string => {\n  // https://developer.spotify.com/documentation/general/guides/authorization-guide/\n  // Implicit flow\n  return `https://accounts.spotify.com/authorize?client_id=${client_id}&redirect_uri=${encodeURIComponent(\n    redirect_uri\n  )}&scope=${\n    scopes ? scopes.join(\" \") : \"\"\n  }&response_type=${response_type}&state=${state ? state : \"\"}&show_dialog=${\n    show_dialog ? show_dialog : \"false\"\n  }`;\n};\n","import { SET_TOKEN } from \"redux/constants/setToken.constant\";\n\nexport interface IState {\n  token: string | null;\n}\n\ninterface IAction {\n  type: string;\n  payload: any;\n}\n\nconst initialState: IState = {\n  token: null\n};\n\nexport const rootReducer = (state = initialState, action: IAction) => {\n  if (action.type === SET_TOKEN) {\n    return { ...state, token: action.payload };\n  }\n  return state;\n};\n","import { createStore } from \"redux\";\n\nimport { rootReducer } from \"./reducers/root.reducer\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.scss\";\n\nimport App from \"components/App/App.component\";\n\nimport store from \"redux/store\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"Playlist_cover__3U_7L\",\"card\":\"Playlist_card__3OMCF\",\"close\":\"Playlist_close__3n1DV\",\"wrapper\":\"Playlist_wrapper__38PS6\",\"header\":\"Playlist_header__3XXLq\",\"title\":\"Playlist_title__3Fedx\",\"description\":\"Playlist_description__2WzFR\",\"createdBy\":\"Playlist_createdBy__3_wWb\",\"author\":\"Playlist_author__27M0k\",\"lineBreak\":\"Playlist_lineBreak__2IGvn\",\"section\":\"Playlist_section__14O49\"};"],"sourceRoot":""}