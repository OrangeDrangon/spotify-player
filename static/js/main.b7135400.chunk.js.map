{"version":3,"sources":["assets/icons/skip_next.svg","assets/icons/skip_previous.svg","assets/icons/play.svg","assets/icons/pause.svg","components/Playlist/Playlist.module.scss","components/Header/Header.component.tsx","utils/getUrl.util.ts","components/Card/Card.component.tsx","components/Modal/Modal.component.tsx","components/Track/Track.component.tsx","components/Tracks/Tracks.component.tsx","components/Playlist/Playlist.component.tsx","utils/htmlDecode.util.ts","components/PlaylistList/PlaylistList.component.tsx","components/Personal/Personal.component.tsx","components/Featured/Featured.component.tsx","components/Callback/Callback.component.tsx","redux/actions/setToken.action.ts","redux/constants/setToken.constant.ts","components/Player/Player.component.tsx","redux/actions/setDeviceId.action.ts","redux/constants/setDeviceId.constant.ts","components/App/App.component.tsx","utils/generateSpotifyAuthUrl.util.ts","redux/reducers/root.reducer.ts","redux/store.ts","serviceWorker.ts","index.tsx","components/Player/Player.module.scss","components/Tracks/Tracks.module.scss","components/Track/Track.module.scss","components/App/App.module.scss","components/Header/Header.module.scss","components/PlaylistList/PlaylistList.module.scss","assets/icons/close.svg","components/Card/Card.module.scss","components/Modal/Modal.module.scss"],"names":["module","exports","__webpack_require__","p","cover","card","close","wrapper","header","title","description","createdBy","author","lineBreak","section","Header","react_default","a","createElement","className","classes","react_router_dom","to","getUrl","_x","_x2","_getUrl","apply","this","arguments","_callee","url","token","response","json","regenerator_default","wrap","_context","prev","next","fetch","method","headers","concat","sent","abrupt","status","t0","console","log","stop","Card","_ref","children","containerClass","container","Modal","open","onBackdropClick","backdrop","onClick","_ref2","target","currentTarget","style","display","Track","connect","_ref3","device_id","track","playlistUri","play","useCallback","Object","asyncToGenerator","mark","body","context_uri","offset","uri","JSON","stringify","Content-Type","Authorization","row","elm","artist","name","artists","Tracks","initalTracks","tracks","_useState","useState","_useState2","slicedToArray","setTracks","_useState3","defineProperty","href","_useState4","cache","setCache","handlePaging","key","link","cached","objectSpread","table","content","items","map","Track_component","id","Math","random","previous","buttons","disabled","Playlist","_ref4","input","data","setData","setOpen","getData","useEffect","cancelled","_callee2","unfiltered","dataNew","_context2","Fragment","backgroundImage","images","Modal_component","Card_component","src","alt","owner","display_name","DOMParser","parseFromString","documentElement","textContent","Tracks_component","PlaylistList","getSimple","playlists","setPlaylists","featuredNew","playlist","Playlist_component","Personal","getPlaylistList","PlaylistList_component","Featured","getFeatured","Callback","dispatch","setToken","type","payload","redirectTo","setRedirectTo","timeoutId","params","qs","parse","window","location","hash","access_token","spotifyResponse","setTimeout","Number","expires_in","state","clearTimeout","react_router","SilderWithTooltip","createSliderWithTooltip","Slider","Player","setDeviceId","paused","setPaused","player","setPlayer","_useState5","_useState6","currentTrack","setCurrentTrack","Spotify","playerNew","volume","getOAuthToken","callback","addListener","track_window","current_track","information","album","words","trackName","nowPlaying","iconButton","previousTrack","togglePlay","pause","nextTrack","defaultValue","min","max","step","onChange","v","setVolume","tipFormatter","width","App","requestContents","client_id","process","redirect_uri","response_type","scopes","pathname","assign","show_dialog","encodeURIComponent","join","generateSpotifyAuthUrl","Header_component","page","exact","path","render","component","Player_component","initialState","store","createStore","length","undefined","action","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","es","App_component","document","getElementById","URL","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kHCCxCH,EAAAC,QAAA,CAAkBG,MAAA,wBAAAC,KAAA,uBAAAC,MAAA,wBAAAC,QAAA,0BAAAC,OAAA,yBAAAC,MAAA,wBAAAC,YAAA,8BAAAC,UAAA,4BAAAC,OAAA,yBAAAC,UAAA,4BAAAC,QAAA,mMCuBHC,EAnBU,WACvB,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAQZ,QACzBQ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,GAAG,YACHH,UAAU,iBAFZ,YAMAH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,GAAG,YACHH,UAAU,iBAFZ,sCCZC,SAAeI,EAAtBC,EAAAC,GAAA,OAAAC,EAAAC,MAAAC,KAAAC,sDAAO,SAAAC,EACLC,EACAC,GAFK,IAAAC,EAAAC,EAAA,OAAAC,EAAAlB,EAAAmB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAIDP,EAJC,CAAAK,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAMsBC,MAAMT,EAAK,CAChCU,OAAQ,MACRC,QAAS,CAAC,CAAC,gBAAD,UAAAC,OAA4BX,OARvC,cAMKC,EANLI,EAAAO,KAAAP,EAAAE,KAAA,EAUkBN,EAASC,OAV3B,cAUKA,EAVLG,EAAAO,KAAAP,EAAAQ,OAAA,UAWMZ,EAASa,OAAkBZ,IAXjC,QAAAG,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAaDW,QAAQC,IAARZ,EAAAU,IAbC,eAAAV,EAAAQ,OAAA,SAgBE,MAhBF,yBAAAR,EAAAa,SAAApB,EAAA,yHCiBQqB,EAVgB,SAAAC,GAA0C,IAAvCC,EAAuCD,EAAvCC,SAAUC,EAA6BF,EAA7BE,eAC1C,OACEtC,EAAAC,EAAAC,cAAA,OACEC,UAAS,GAAAwB,OAAKvB,IAAQmC,UAAb,KAAAZ,OAA0BW,GAAkC,KAEpED,qBCgBQG,EApBiB,SAAAJ,GAIlB,IAHZC,EAGYD,EAHZC,SACAI,EAEYL,EAFZK,KACAC,EACYN,EADZM,gBAEA,OACE1C,EAAAC,EAAAC,cAAA,OACEC,UAAWC,IAAQuC,SACnBC,QAAS,SAAAC,GAA+BA,EAA5BC,SAA4BD,EAApBE,eAEhBL,KAGJM,MAAOP,EAAO,GAAK,CAAEQ,QAAS,SAE7BZ,sDCyCQa,EAFDC,YAJU,SAAAC,GACtB,MAAO,CAAEpC,MAD+CoC,EAA/BpC,MACTqC,UADwCD,EAAxBC,YAIpBF,CAzC2B,SAAAf,GAK3B,IAJZkB,EAIYlB,EAJZkB,MACAtC,EAGYoB,EAHZpB,MACAuC,EAEYnB,EAFZmB,YACAF,EACYjB,EADZiB,UAEMG,EAAOC,sBAAWC,OAAAC,EAAA,EAAAD,CAAAvC,EAAAlB,EAAA2D,KAAC,SAAA9C,IAAA,IAAA+C,EAAA,OAAA1C,EAAAlB,EAAAmB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACnB8B,IAAarC,EADM,CAAAK,EAAAE,KAAA,eAEfsC,EAAyB,CAC7BC,YAAaP,EACbQ,OAAQ,CAAEC,IAAKV,EAAMU,MAJF3C,EAAAE,KAAA,EAMfC,MAAK,uDAAAG,OAC8C0B,GACvD,CACE5B,OAAQ,MACRoC,KAAMI,KAAKC,UAAUL,GACrBnC,QAAS,CACPyC,eAAgB,mBAChBC,cAAa,UAAAzC,OAAYX,MAbV,wBAAAK,EAAAa,SAAApB,MAkBtB,CAACE,EAAOsC,EAAOC,EAAaF,IAC/B,OACErD,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQiE,KACtBrE,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQkE,KACtBtE,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQmE,OAAQ3B,QAASY,GACtCF,EAAMkB,OAGXxE,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQkE,KAAMhB,EAAMmB,QAAQ,GAAGD,SCqDtCE,EAFAvB,YAJS,SAAAC,GACtB,MAAO,CAAEpC,MADoCoC,EAApBpC,QAIZmC,CAtF2B,SAAAf,GAI5B,IAHZpB,EAGYoB,EAHZpB,MACQ2D,EAEIvC,EAFZwC,OACArB,EACYnB,EADZmB,YACYsB,EACgBC,mBAASH,GADzBI,EAAArB,OAAAsB,EAAA,EAAAtB,CAAAmB,EAAA,GACLD,EADKG,EAAA,GACGE,EADHF,EAAA,GAAAG,EAEcJ,mBAASpB,OAAAyB,EAAA,EAAAzB,CAAA,GAChCkB,EAAOQ,KAAOR,IAHLS,EAAA3B,OAAAsB,EAAA,EAAAtB,CAAAwB,EAAA,GAELI,EAFKD,EAAA,GAEEE,EAFFF,EAAA,GAMNG,EAAe/B,sBAAW,eAAAZ,EAAAa,OAAAC,EAAA,EAAAD,CAAAvC,EAAAlB,EAAA2D,KAC9B,SAAA9C,EAAO2E,GAAP,IAAAC,EAAAC,EAAA1E,EAAA,OAAAE,EAAAlB,EAAAmB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YACQmE,EAAOd,EAAOa,IADtB,CAAApE,EAAAE,KAAA,cAGUoE,EAASL,EAAMI,IAHzB,CAAArE,EAAAE,KAAA,eAKM0D,EAAUU,GALhBtE,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,EAQyBhB,EACnBmF,EACA1E,GAVN,QAQQC,EARRI,EAAAO,MAYqCE,SAC/Bb,EAAWA,EACXsE,EAAS7B,OAAAkC,EAAA,EAAAlC,CAAA,GAAK4B,EAAN5B,OAAAyB,EAAA,EAAAzB,CAAA,GAAczC,EAASmE,KAAOnE,KACtCgE,EAAUhE,IAfhB,yBAAAI,EAAAa,SAAApB,MAD8B,gBAAAN,GAAA,OAAAqC,EAAAlC,MAAAC,KAAAC,YAAA,GAoB9B,CAAC+D,EAAQ5D,EAAOsE,IAGlB,OACEtF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQyF,OACtB7F,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQZ,QACtBQ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQX,OAAxB,QACAO,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQX,OAAxB,WAEFO,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ0F,SACrBlB,EAAOmB,MAAMC,IAAI,SAAA1C,GAAK,OACrBA,EAAMA,MACJtD,EAAAC,EAAAC,cAAC+F,EAAD,CAAOR,IAAKnC,EAAMA,MAAM4C,GAAKC,KAAKC,SAAU9C,MAAOA,EAAMA,MAAOC,YAAaA,IAE7EvD,EAAAC,EAAAC,cAAA,OAAKuF,IAAKU,KAAKC,UAAf,iBAILxB,EAAOrD,MAAQqD,EAAOyB,SACrBrG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQkG,SACrB1B,EAAOyB,SACNrG,EAAAC,EAAAC,cAAA,UACEC,UAAU,gBACVyC,QAAS,kBAAM4C,EAAa,cAF9B,YAOAxF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBoG,UAAQ,GAA1C,YAID3B,EAAOrD,KACNvB,EAAAC,EAAAC,cAAA,UACEC,UAAU,gBACVyC,QAAS,kBAAM4C,EAAa,UAF9B,QAOAxF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBoG,UAAQ,GAA1C,SAMJ,MCcOC,EAFErD,YAJO,SAAAsD,GACtB,MAAO,CAAEzF,MADoCyF,EAApBzF,QAIVmC,CAnF2B,SAAAf,GAA6B,ICzB9CsE,EDyBoBtB,EAA0BhD,EAA1BgD,KAAMpE,EAAoBoB,EAApBpB,MAAoB6D,EAC/CC,mBAAsC,MADSC,EAAArB,OAAAsB,EAAA,EAAAtB,CAAAmB,EAAA,GAChE8B,EADgE5B,EAAA,GAC1D6B,EAD0D7B,EAAA,GAAAG,EAE/CJ,oBAAS,GAFsCO,EAAA3B,OAAAsB,EAAA,EAAAtB,CAAAwB,EAAA,GAEhEzC,EAFgE4C,EAAA,GAE1DwB,EAF0DxB,EAAA,GAIjEyB,EAAUrD,sBAAWC,OAAAC,EAAA,EAAAD,CAAAvC,EAAAlB,EAAA2D,KAAC,SAAA9C,IAAA,OAAAK,EAAAlB,EAAAmB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACbhB,EAA6B6E,EAAMpE,GADtB,cAAAK,EAAAQ,OAAA,SAAAR,EAAAO,MAAA,wBAAAP,EAAAa,SAAApB,MAEzB,CAACsE,EAAMpE,IAoBV,OAlBA+F,oBAAU,WACR,IAAIC,GAAY,EAYhB,OAXAtD,OAAAC,EAAA,EAAAD,CAAAvC,EAAAlB,EAAA2D,KAAC,SAAAqD,IAAA,IAAAC,EAAAC,EAAA,OAAAhG,EAAAlB,EAAAmB,KAAA,SAAAgG,GAAA,cAAAA,EAAA9F,KAAA8F,EAAA7F,MAAA,cAAA6F,EAAA7F,KAAA,EAC0BuF,IAD1B,QACOI,EADPE,EAAAxF,QAGSsF,EAA6BpF,SAC3BqF,EAAUD,EACXF,GACHJ,EAAQO,KANf,wBAAAC,EAAAlF,SAAA+E,KAADvD,GAWO,WACLsD,GAAY,IAEb,CAACF,IAGF9G,EAAAC,EAAAC,cAACF,EAAAC,EAAMoH,SAAP,KACErH,EAAAC,EAAAC,cAAA,OACEC,UAAWC,IAAQhB,MACnBwD,QAAS,kBAAMiE,GAAQ,IACvB7D,MACE2D,EACI,CACEW,gBAAe,OAAA3F,OAASgF,EAAKY,OAAO,GAAGxG,IAAxB,MAEjB,KAGP0B,EACCzC,EAAAC,EAAAC,cAACsH,EAAD,CAAO/E,KAAMA,EAAMC,gBAAiB,kBAAMmE,GAAQ,KAChD7G,EAAAC,EAAAC,cAACuH,EAAD,CAAMnF,eAAgBlC,IAAQf,MAC5BW,EAAAC,EAAAC,cAAA,OACEwH,IAAKpI,IACLqI,IAAI,GACJxH,UAAWC,IAAQd,MACnBsD,QAAS,kBAAMiE,GAAQ,MAExBF,EACC3G,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQb,SACtBS,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAQZ,QACzBQ,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAQX,OAAQkH,EAAKnC,MACpCxE,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQT,WAAxB,aACa,IACXK,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAQR,QACtB+G,EAAKiB,MAAMC,eAGhB7H,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQV,cCnFfgH,EDoFKC,EAAKjH,YAAciH,EAAKjH,YAAc,ICnFxD,IAAIoI,WAAYC,gBAAgBrB,EAAO,aACxCsB,gBAAgBC,eDqFbjI,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQP,YACxBG,EAAAC,EAAAC,cAAA,WAASC,UAAWC,IAAQN,SAC1BE,EAAAC,EAAAC,cAACgI,EAAD,CAAQtD,OAAQ+B,EAAK/B,OAAQrB,YAAaoD,EAAK3C,QAInD,eAKN,MElDOmE,EAjCwB,SAAA/F,GAA2B,IAAxBgG,EAAwBhG,EAAxBgG,UAAwBvD,EAC9BC,mBAExB,MAHsDC,EAAArB,OAAAsB,EAAA,EAAAtB,CAAAmB,EAAA,GACzDwD,EADyDtD,EAAA,GAC9CuD,EAD8CvD,EAAA,GAwBhE,OAnBAgC,oBAAU,WACR,IAAIC,GAAY,EAchB,OAbAtD,OAAAC,EAAA,EAAAD,CAAAvC,EAAAlB,EAAA2D,KAAC,SAAA9C,IAAA,IAAAoG,EAAAqB,EAAA,OAAApH,EAAAlB,EAAAmB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC0B6G,IAD1B,QACOlB,EADP7F,EAAAO,QAGSsF,EAA6BpF,SAC3ByG,EAAcrB,EAGfF,GACHsB,EAAaC,KARpB,wBAAAlH,EAAAa,SAAApB,KAAD4C,GAaO,WACLsD,GAAY,IAEb,CAACoB,IAEFpI,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQmC,YACpB8F,EAAYA,EAAUtC,MAAQ,IAAIC,IAAI,SAAAwC,GAAQ,OAC9CxI,EAAAC,EAAAC,cAACuI,EAAD,CAAUhD,IAAK+C,EAAStC,GAAId,KAAMoD,EAASpD,WCVpCsD,EAFEvF,YAJO,SAAAC,GACtB,MAAO,CAAEpC,MADoCoC,EAApBpC,QAIVmC,CAd2B,SAAAf,GAAuB,IAApBpB,EAAoBoB,EAApBpB,MACvC2H,EAAkBlF,sBAAWC,OAAAC,EAAA,EAAAD,CAAAvC,EAAAlB,EAAA2D,KAAC,SAAA9C,IAAA,OAAAK,EAAAlB,EAAAmB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACrBhB,EACX,0CACAS,GAHgC,cAAAK,EAAAQ,OAAA,SAAAR,EAAAO,MAAA,wBAAAP,EAAAa,SAAApB,MAKjC,CAACE,IACJ,OAAOhB,EAAAC,EAAAC,cAAC0I,EAAD,CAAcR,UAAWO,MCenBE,EAFE1F,YAJO,SAAAC,GACtB,MAAO,CAAEpC,MADoCoC,EAApBpC,QAIVmC,CApB2B,SAAAf,GAAuB,IAApBpB,EAAoBoB,EAApBpB,MACvC8H,EAAcrF,sBAAWC,OAAAC,EAAA,EAAAD,CAAAvC,EAAAlB,EAAA2D,KAAC,SAAA9C,IAAA,IAAAG,EAAA,OAAAE,EAAAlB,EAAAmB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACPhB,EACrB,uDACAS,GAH4B,cACxBC,EADwBI,EAAAO,KAAAP,EAAAQ,OAAA,SAKvBZ,EACDA,EAA2Ba,OAE1Bb,EADAA,EAA8BoH,UAEjC,MAT0B,wBAAAhH,EAAAa,SAAApB,MAU7B,CAACE,IAEJ,OAAOhB,EAAAC,EAAAC,cAAC0I,EAAD,CAAcR,UAAWU,MCoCnBC,EALE5F,YACf,KALyB,SAAC6F,GAC1B,MAAO,CAAEC,SAAU,SAACjI,GAAD,OAA0BgI,ECtDtC,CAAEE,KCHc,WDGGC,QDsDqCnI,OAGhDmC,CAzC2B,SAAAf,GAA0B,IAAvB6G,EAAuB7G,EAAvB6G,SAAuBpE,EAChCC,mBAAwB,MADQC,EAAArB,OAAAsB,EAAA,EAAAtB,CAAAmB,EAAA,GAC7DuE,EAD6DrE,EAAA,GACjDsE,EADiDtE,EAAA,GA8BpE,OA5BAgC,oBAAU,WACR,IAAIC,GAAY,EACZsC,EAAmC,KACjCC,EAASC,IAAGC,MAAMC,OAAOC,SAASC,MACxC,GAAIL,EAAOM,aAAc,CAEvB,IAAMC,EAAmBP,EAGpBvC,IACHiC,EAASa,EAAgBD,cACzBP,EAAYS,WACV,kBAAMd,EAAS,OACsB,IAArCe,OAAOF,EAAgBG,cAIvBH,EAAgBI,OAClBb,EAAcS,EAAgBI,OAGlC,OAAO,WACLlD,GAAY,EACRsC,GACFa,aAAab,KAGhB,CAACL,IACAG,EACKpJ,EAAAC,EAAAC,cAACkK,EAAA,EAAD,CAAU9J,GAAI8I,IAEdpJ,EAAAC,EAAAC,cAAA,uIG1BLmK,GAAoBC,YAAwBC,KA0GnCC,GALArH,YATS,SAAAC,GACtB,MAAO,CAAEpC,MAD+CoC,EAA/BpC,MACTqC,UADwCD,EAAxBC,YAIP,SAAC2F,GAC1B,MAAO,CACLyB,YAAa,SAACpH,GAAD,OAA8B2F,ECzHtC,CAAEE,KCHkB,cDGGC,QDyHoC9F,OAGrDF,CAnG2B,SAAAf,GAI5B,IAHZpB,EAGYoB,EAHZpB,MACAqC,EAEYjB,EAFZiB,UACAoH,EACYrI,EADZqI,YACY5F,EACgBC,oBAAS,GADzBC,EAAArB,OAAAsB,EAAA,EAAAtB,CAAAmB,EAAA,GACL6F,EADK3F,EAAA,GACG4F,EADH5F,EAAA,GAAAG,EAEgBJ,mBAAgC,MAFhDO,EAAA3B,OAAAsB,EAAA,EAAAtB,CAAAwB,EAAA,GAEL0F,EAFKvF,EAAA,GAEGwF,EAFHxF,EAAA,GAAAyF,EAG4BhG,mBAAqB,MAHjDiG,EAAArH,OAAAsB,EAAA,EAAAtB,CAAAoH,EAAA,GAGLE,EAHKD,EAAA,GAGSE,EAHTF,EAAA,GA6BZ,OAzBAhE,oBAAU,WACR,GAAI2C,OAAOwB,SAAWlK,IAAUqC,IAAcuH,EAAQ,CACpD,IAAMO,EAAY,IAAIzB,OAAOwB,QAAQV,OAAO,CAC1ChG,KAAM,uBACN4G,OAAQ,EACRC,cAAe,SAAAC,GAAQ,OAAIA,EAAStK,MAGtCmK,EAAUI,YAAY,QAAS,SAAA1I,GAAmB,IAAhBQ,EAAgBR,EAAhBQ,UAChCoH,EAAYpH,KAGd8H,EAAUI,YAAY,uBAAwB,SAAA5E,GAC5CgE,EAAUhE,EAAK+D,QACX/D,EAAK6E,cAAgB7E,EAAK6E,aAAaC,eACzCR,EAAgBtE,EAAK6E,aAAaC,eAEpCzJ,QAAQC,IAAI0E,KAGdwE,EAAUhI,UAEV0H,EAAUM,KAEX,CAAC9H,EAAWrC,EAAOyJ,EAAaG,IAEjC5K,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQmC,WACrBqI,GAAUvH,EACTrD,EAAAC,EAAAC,cAACF,EAAAC,EAAMoH,SAAP,KACG2D,EACChL,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQsL,aACtB1L,EAAAC,EAAAC,cAAA,OAAKwH,IAAKsD,EAAaW,MAAMpE,OAAO,GAAGxG,IAAK4G,IAAI,KAChD3H,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQwL,OACtB5L,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQyL,WAAYb,EAAaxG,MACjDxE,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQmE,QAASyG,EAAavG,QAAQ,GAAGD,QAI7D,GAEFxE,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ0L,YACtB9L,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQkG,SACtBtG,EAAAC,EAAAC,cAAA,UACEC,UAAS,iBAAAwB,OAAmBvB,IAAQ2L,YACpCnJ,QAAS,kBAAMgI,EAAOoB,kBAEtBhM,EAAAC,EAAAC,cAAA,OAAKwH,IAAKrB,KAAUsB,IAAI,MAE1B3H,EAAAC,EAAAC,cAAA,UACEC,UAAS,iBAAAwB,OAAmBvB,IAAQ2L,YACpCnJ,QAAS,WACPgI,EAAOqB,eAGTjM,EAAAC,EAAAC,cAAA,OAAKwH,IAAKgD,EAASlH,KAAO0I,KAAOvE,IAAI,MAEvC3H,EAAAC,EAAAC,cAAA,UACEC,UAAS,iBAAAwB,OAAmBvB,IAAQ2L,YACpCnJ,QAAS,kBAAMgI,EAAOuB,cAEtBnM,EAAAC,EAAAC,cAAA,OAAKwH,IAAKnG,IAAMoG,IAAI,OAGxB3H,EAAAC,EAAAC,cAACmK,GAAD,OAEFrK,EAAAC,EAAAC,cAACmK,GAAD,CACE+B,aAAc,IACdC,IAAK,EACLC,IAAK,IACLC,KAAM,EACNC,SAAU,SAACC,GAAD,OAAe7B,EAAO8B,UAAUD,EAAI,MAC9CE,aAAc,SAACF,GAAD,SAAA9K,OAAkB8K,EAAlB,MACdzJ,MAAO,CAAE4J,MAAO,QAIpB5M,EAAAC,EAAAC,cAAA,4BG3CO2M,GAJH1J,YAJY,SAAAN,GACtB,MAAO,CAAE7B,MAD+C6B,EAA/B7B,MACTqC,UADwCR,EAAxBQ,YAItBF,CA1C2B,SAAAf,GAAsB,IAApBpB,EAAoBoB,EAApBpB,MAwBvC,OAvBA+F,oBAAU,WACR,IAAK/F,IACYwI,IAAGC,MAAMC,OAAOC,SAASC,MAC5BC,aAAc,CACxB,IAAMiD,EAAwC,CAC5CC,UAAWC,mCACXC,aAAcD,iCACdE,cAAe,QACfC,OAAQ,CACN,YACA,sBACA,kBACA,oBACA,wBACA,8BAEFjD,MAAOR,OAAOC,SAASyD,UAEzB1D,OAAOC,SAAS0D,OCxCc,SAAAjL,GAOF,IANlC2K,EAMkC3K,EANlC2K,UACAE,EAKkC7K,EALlC6K,aACAC,EAIkC9K,EAJlC8K,cACAC,EAGkC/K,EAHlC+K,OACAG,EAEkClL,EAFlCkL,YACApD,EACkC9H,EADlC8H,MAIA,0DAAAvI,OAA2DoL,EAA3D,kBAAApL,OAAqF4L,mBACnFN,GADF,WAAAtL,OAGEwL,EAASA,EAAOK,KAAK,KAAO,GAH9B,mBAAA7L,OAIkBuL,EAJlB,WAAAvL,OAIyCuI,GAAgB,GAJzD,iBAAAvI,OAKE2L,GAA4B,SDyBDG,CAAuBX,MAGjD,CAAC9L,IAGFhB,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAACwN,EAAD,MACA1N,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQuN,MACtB3N,EAAAC,EAAAC,cAACkK,EAAA,EAAD,CAAOwD,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM9N,EAAAC,EAAAC,cAACkK,EAAA,EAAD,CAAU9J,GAAG,iBACjDN,EAAAC,EAAAC,cAACkK,EAAA,EAAD,CAAOyD,KAAK,YAAYE,UAAWrF,IACnC1I,EAAAC,EAAAC,cAACkK,EAAA,EAAD,CAAOyD,KAAK,YAAYE,UAAWlF,IACnC7I,EAAAC,EAAAC,cAACkK,EAAA,EAAD,CAAOyD,KAAK,YAAYE,UAAWhF,KAErC/I,EAAAC,EAAAC,cAAC8N,GAAD,kBE3CAC,GAAuB,CAC3BjN,MAAO,KACPqC,UAAW,MCTE6K,GAFDC,aDca,WAA2C,IAA1CjE,EAA0CrJ,UAAAuN,OAAA,QAAAC,IAAAxN,UAAA,GAAAA,UAAA,GAAlCoN,GAAcK,EAAoBzN,UAAAuN,OAAA,EAAAvN,UAAA,QAAAwN,EACpE,MNnBuB,aMmBnBC,EAAOpF,KACFxF,OAAAkC,EAAA,EAAAlC,CAAA,GAAKwG,EAAZ,CAAmBlJ,MAAOsN,EAAOnF,UHpBR,gBGsBvBmF,EAAOpF,KACFxF,OAAAkC,EAAA,EAAAlC,CAAA,GAAKwG,EAAZ,CAAmB7G,UAAWiL,EAAOnF,UAEhCe,IEbHqE,GAAcC,QACW,cAA7B9E,OAAOC,SAAS8E,UAEe,UAA7B/E,OAAOC,SAAS8E,UAEhB/E,OAAOC,SAAS8E,SAASC,MACvB,2DA8CN,SAASC,GAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBlF,QACf4E,UAAUC,cAAcQ,YAI1BvN,QAAQC,IACN,iHAKE4M,GAAUA,EAAOW,UACnBX,EAAOW,SAASN,KAMlBlN,QAAQC,IAAI,sCAGR4M,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUP,UAO5BQ,MAAM,SAAAC,GACL3N,QAAQ2N,MAAM,4CAA6CA,KC3FjEC,IAAS9B,OACP9N,EAAAC,EAAAC,cAAC2P,EAAA,EAAD,CAAU3B,MAAOA,IACflO,EAAAC,EAAAC,cAAC4P,GAAD,OAEFC,SAASC,eAAe,SDUnB,SAAkBnB,GACvB,GAA6C,kBAAmBC,UAAW,CAMzE,GAJkB,IAAImB,IACnBjD,GACDtD,OAAOC,SAASvE,MAEJ8K,SAAWxG,OAAOC,SAASuG,OAIvC,OAGFxG,OAAOyG,iBAAiB,OAAQ,WAC9B,IAAMvB,EAAK,GAAAjN,OAAMqL,GAAN,sBAEPuB,IAgEV,SAAiCK,EAAeC,GAE9CrN,MAAMoN,GACHK,KAAK,SAAAhO,GAEJ,IAAMmP,EAAcnP,EAASS,QAAQ2O,IAAI,gBAEnB,MAApBpP,EAASa,QACO,MAAfsO,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CxB,UAAUC,cAAcwB,MAAMtB,KAAK,SAAAC,GACjCA,EAAasB,aAAavB,KAAK,WAC7BvF,OAAOC,SAAS8G,aAKpB9B,GAAgBC,EAAOC,KAG1Ba,MAAM,WACL1N,QAAQC,IACN,mEArFAyO,CAAwB9B,EAAOC,GAI/BC,UAAUC,cAAcwB,MAAMtB,KAAK,WACjCjN,QAAQC,IACN,gHAMJ0M,GAAgBC,EAAOC,MCnC/BE,uBCtBA/P,EAAAC,QAAA,CAAkBsD,UAAA,0BAAAmJ,YAAA,4BAAAE,MAAA,sBAAAE,WAAA,2BAAAxF,QAAA,wBAAAyF,WAAA,gDCAlB/M,EAAAC,QAAA,CAAkB4G,MAAA,sBAAArG,OAAA,uBAAAC,MAAA,sBAAAqG,QAAA,6CCAlB9G,EAAAC,QAAA,CAAkBoF,IAAA,mBAAAC,IAAA,mBAAAC,OAAA,2CCAlBvF,EAAAC,QAAA,CAAkB0O,KAAA,kBAAA7N,QAAA,0CCAlBd,EAAAC,QAAA,CAAkBO,OAAA,4CCAlBR,EAAAC,QAAA,CAAkBsD,UAAA,qDCDlBvD,EAAAC,QAAiBC,EAAAC,EAAuB,sDCCxCH,EAAAC,QAAA,CAAkBsD,UAAA,6CCAlBvD,EAAAC,QAAA,CAAkB0D,SAAA","file":"static/js/main.b7135400.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/skip_next.cf9d95de.svg\";","module.exports = __webpack_public_path__ + \"static/media/skip_previous.9bb6aca1.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.e89c0883.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.ec371d86.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"Playlist_cover__3U_7L\",\"card\":\"Playlist_card__3OMCF\",\"close\":\"Playlist_close__3n1DV\",\"wrapper\":\"Playlist_wrapper__38PS6\",\"header\":\"Playlist_header__3XXLq\",\"title\":\"Playlist_title__3Fedx\",\"description\":\"Playlist_description__2WzFR\",\"createdBy\":\"Playlist_createdBy__3_wWb\",\"author\":\"Playlist_author__27M0k\",\"lineBreak\":\"Playlist_lineBreak__2IGvn\",\"section\":\"Playlist_section__14O49\"};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport classes from \"./Header.module.scss\";\n\nconst Header: React.FC = () => {\n  return (\n    <header className={classes.header}>\n      <Link\n        to=\"/featured\"\n        className=\"styled-button\"\n      >\n        Featured\n      </Link>\n      <Link\n        to=\"/personal\"\n        className=\"styled-button\"\n      >\n        Personal\n      </Link>\n    </header>\n  );\n};\n\nexport default Header;\n","import { ISpotifyError } from \"interfaces/ISpotifyError.interface\";\n\nexport async function getUrl<T>(\n  url: string,\n  token: string | null\n): Promise<T | ISpotifyError | null> {\n  if (token) {\n    try {\n      const response = await fetch(url, {\n        method: \"GET\",\n        headers: [[\"Authorization\", `Bearer ${token}`]]\n      });\n      const json = await response.json();\n      return response.status === 200 ? (json as T) : (json as ISpotifyError);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return null;\n}\n","import React from \"react\";\n\nimport classes from \"./Card.module.scss\";\n\ninterface IProps {\n  children: React.ReactNode;\n  containerClass?: string;\n}\n\nconst Card: React.FC<IProps> = ({ children, containerClass }: IProps) => {\n  return (\n    <div\n      className={`${classes.container} ${containerClass ? containerClass : \"\"}`}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport classes from \"./Modal.module.scss\";\n\ninterface IProps {\n  children: React.ReactNode;\n  open: boolean;\n  onBackdropClick: () => void;\n}\n\nconst Modal: React.FC<IProps> = ({\n  children,\n  open,\n  onBackdropClick\n}: IProps) => {\n  return (\n    <div\n      className={classes.backdrop}\n      onClick={({ target, currentTarget }) => {\n        if (target === currentTarget) {\n          onBackdropClick();\n        }\n      }}\n      style={open ? {} : { display: \"none\" }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useCallback } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport classes from \"./Track.module.scss\";\n\nimport { ISpotifyTrack } from \"interfaces/ISpotiftyTrack.interface\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\n\ninterface IProps {\n  track: ISpotifyTrack;\n  token: string | null;\n  playlistUri: string;\n  device_id: string | null;\n}\n\ninterface ISpotifyPlayBody {\n  context_uri?: string;\n  uris?: string[];\n  offset: { position: number } | { uri: string };\n  position_ms?: string;\n}\n\nconst ConnectedTrack: React.FC<IProps> = ({\n  track,\n  token,\n  playlistUri,\n  device_id\n}: IProps) => {\n  const play = useCallback(async () => {\n    if (device_id && token) {\n      const body: ISpotifyPlayBody = {\n        context_uri: playlistUri,\n        offset: { uri: track.uri }\n      };\n      await fetch(\n        `https://api.spotify.com/v1/me/player/play?device_id=${device_id}`,\n        {\n          method: \"PUT\",\n          body: JSON.stringify(body),\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        }\n      );\n    }\n  }, [token, track, playlistUri, device_id]);\n  return (\n    <div className={classes.row}>\n      <div className={classes.elm}>\n        <div className={classes.artist} onClick={play}>\n          {track.name}\n        </div>\n      </div>\n      <div className={classes.elm}>{track.artists[0].name}</div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ token, device_id }: IState) => {\n  return { token, device_id };\n};\n\nconst Track = connect(mapStateToProps)(ConnectedTrack);\n\nexport default Track;\n","import React, { useCallback, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport classes from \"./Tracks.module.scss\";\n\nimport Track from \"components/Track/Track.component\";\n\nimport { ISpotifyPaging } from \"interfaces/ISpotifyPaging.interface\";\nimport { ISpotifyPlaylistTrack } from \"interfaces/ISpotifyPlaylistTrack.inerface\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\nimport { getUrl } from \"utils/getUrl.util\";\nimport { ISpotifyError } from \"interfaces/ISpotifyError.interface\";\n\ninterface IProps {\n  tracks: ISpotifyPaging<ISpotifyPlaylistTrack[]>;\n  token: string | null;\n  playlistUri: string;\n}\n\nconst ConnectedTracks: React.FC<IProps> = ({\n  token,\n  tracks: initalTracks,\n  playlistUri\n}: IProps) => {\n  const [tracks, setTracks] = useState(initalTracks);\n  const [cache, setCache] = useState({\n    [tracks.href]: tracks\n  });\n\n  const handlePaging = useCallback(\n    async (key: \"next\" | \"previous\") => {\n      const link = tracks[key];\n      if (link) {\n        const cached = cache[link];\n        if (cached) {\n          setTracks(cached);\n          return;\n        }\n        let response = await getUrl<ISpotifyPaging<ISpotifyPlaylistTrack[]>>(\n          link,\n          token\n        );\n        if (!(response as ISpotifyError).status) {\n          response = response as ISpotifyPaging<ISpotifyPlaylistTrack[]>;\n          setCache({ ...cache, [response.href]: response });\n          setTracks(response);\n        }\n      }\n    },\n    [tracks, token, cache]\n  );\n\n  return (\n    <div className={classes.table}>\n      <div className={classes.header}>\n        <div className={classes.title}>Song</div>\n        <div className={classes.title}>Artist</div>\n      </div>\n      <div className={classes.content}>\n        {tracks.items.map(track =>\n          track.track ? (\n            <Track key={track.track.id + Math.random()} track={track.track} playlistUri={playlistUri} />\n          ) : (\n            <div key={Math.random()}>Loading...</div>\n          )\n        )}\n      </div>\n      {tracks.next || tracks.previous ? (\n        <div className={classes.buttons}>\n          {tracks.previous ? (\n            <button\n              className=\"styled-button\"\n              onClick={() => handlePaging(\"previous\")}\n            >\n              Previous\n            </button>\n          ) : (\n            <button className=\"styled-button\" disabled>\n              Previous\n            </button>\n          )}\n          {tracks.next ? (\n            <button\n              className=\"styled-button\"\n              onClick={() => handlePaging(\"next\")}\n            >\n              Next\n            </button>\n          ) : (\n            <button className=\"styled-button\" disabled>\n              Next\n            </button>\n          )}\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ token }: IState) => {\n  return { token };\n};\n\nconst Tracks = connect(mapStateToProps)(ConnectedTracks);\n\nexport default Tracks;\n","/* eslint-disable jsx-a11y/heading-has-content */\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport classes from \"./Playlist.module.scss\";\n\nimport close from \"assets/icons/close.svg\";\n\nimport Card from \"components/Card/Card.component\";\nimport Modal from \"components/Modal/Modal.component\";\nimport Tracks from \"components/Tracks/Tracks.component\";\n\nimport { ISpotifyPlaylistFull } from \"interfaces/ISpotifyPlaylist.interface\";\nimport { ISpotifyError } from \"interfaces/ISpotifyError.interface\";\n\nimport { htmlDecode } from \"utils/htmlDecode.util\";\nimport { getUrl } from \"utils/getUrl.util\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\n\ninterface IProps {\n  href: string;\n  token: string | null;\n}\n\nconst ConnectedPlaylist: React.FC<IProps> = ({ href, token }: IProps) => {\n  const [data, setData] = useState<ISpotifyPlaylistFull | null>(null);\n  const [open, setOpen] = useState(false);\n\n  const getData = useCallback(async () => {\n    return await getUrl<ISpotifyPlaylistFull>(href, token);\n  }, [href, token]);\n\n  useEffect(() => {\n    let cancelled = false;\n    (async () => {\n      const unfiltered = await getData();\n      if (unfiltered) {\n        if (!(unfiltered as ISpotifyError).status) {\n          const dataNew = unfiltered as ISpotifyPlaylistFull;\n          if (!cancelled) {\n            setData(dataNew);\n          }\n        }\n      }\n    })();\n    return () => {\n      cancelled = true;\n    };\n  }, [getData]);\n\n  return (\n    <React.Fragment>\n      <div\n        className={classes.cover}\n        onClick={() => setOpen(true)}\n        style={\n          data\n            ? {\n                backgroundImage: `url(${data.images[0].url})`\n              }\n            : {}\n        }\n      />\n      {open ? (\n        <Modal open={open} onBackdropClick={() => setOpen(false)}>\n          <Card containerClass={classes.card}>\n            <img\n              src={close}\n              alt=\"\"\n              className={classes.close}\n              onClick={() => setOpen(false)}\n            />\n            {data ? (\n              <div className={classes.wrapper}>\n                <header className={classes.header}>\n                  <h1 className={classes.title}>{data.name}</h1>\n                  <div className={classes.createdBy}>\n                    Created by{\" \"}\n                    <span className={classes.author}>\n                      {data.owner.display_name}\n                    </span>\n                  </div>\n                  <div className={classes.description}>\n                    {htmlDecode(data.description ? data.description : \"\")}\n                  </div>\n                </header>\n                <div className={classes.lineBreak} />\n                <section className={classes.section}>\n                  <Tracks tracks={data.tracks} playlistUri={data.uri} />\n                </section>\n              </div>\n            ) : (\n              \"Loading...\"\n            )}\n          </Card>\n        </Modal>\n      ) : (\n        \"\"\n      )}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({ token }: IState) => {\n  return { token };\n};\n\nconst Playlist = connect(mapStateToProps)(ConnectedPlaylist);\n\nexport default Playlist;\n","export const htmlDecode = (input: string) => {\n  const doc = new DOMParser().parseFromString(input, \"text/html\");\n  return doc.documentElement.textContent;\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport classes from \"./PlaylistList.module.scss\";\nimport Playlist from \"components/Playlist/Playlist.component\";\n\nimport { ISpotifyError } from \"interfaces/ISpotifyError.interface\";\nimport { ISpotifyPlaylistSimple } from \"interfaces/ISpotifyPlaylist.interface\";\nimport { ISpotifyPaging } from \"interfaces/ISpotifyPaging.interface\";\n\ninterface IProps {\n  getSimple: () => Promise<\n    ISpotifyPaging<ISpotifyPlaylistSimple[]> | ISpotifyError | null\n  >;\n}\n\nconst PlaylistList: React.FC<IProps> = ({ getSimple }: IProps) => {\n  const [playlists, setPlaylists] = useState<ISpotifyPaging<\n    ISpotifyPlaylistSimple[]\n  > | null>(null);\n\n  useEffect(() => {\n    let cancelled = false;\n    (async () => {\n      const unfiltered = await getSimple();\n      if (unfiltered) {\n        if (!(unfiltered as ISpotifyError).status) {\n          const featuredNew = unfiltered as ISpotifyPaging<\n            ISpotifyPlaylistSimple[]\n          >;\n          if (!cancelled) {\n            setPlaylists(featuredNew);\n          }\n        }\n      }\n    })();\n    return () => {\n      cancelled = true;\n    };\n  }, [getSimple]);\n  return (\n    <div className={classes.container}>\n      {(playlists ? playlists.items : []).map(playlist => (\n        <Playlist key={playlist.id} href={playlist.href} />\n      ))}\n    </div>\n  );\n};\n\nexport default PlaylistList;\n","import React, { useCallback } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { getUrl } from \"utils/getUrl.util\";\n\nimport PlaylistList from \"components/PlaylistList/PlaylistList.component\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\n\nimport { ISpotifyPaging } from \"interfaces/ISpotifyPaging.interface\";\nimport { ISpotifyPlaylistSimple } from \"interfaces/ISpotifyPlaylist.interface\";\n\ninterface IProps {\n  token: string | null;\n}\n\nconst PersonalConnected: React.FC<IProps> = ({ token }: IProps) => {\n  const getPlaylistList = useCallback(async () => {\n    return await getUrl<ISpotifyPaging<ISpotifyPlaylistSimple[]>>(\n      \"https://api.spotify.com/v1/me/playlists\",\n      token\n    );\n  }, [token]);\n  return <PlaylistList getSimple={getPlaylistList} />;\n};\n\nconst mapStateToProps = ({ token }: IState) => {\n  return { token };\n};\n\nconst Personal = connect(mapStateToProps)(PersonalConnected);\n\nexport default Personal;\n","import React, { useCallback } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { getUrl } from \"utils/getUrl.util\";\n\nimport PlaylistList from \"components/PlaylistList/PlaylistList.component\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\n\nimport { ISpotifyFeatured } from \"interfaces/ISpotifyFeatured.interface\";\nimport { ISpotifyError } from \"interfaces/ISpotifyError.interface\";\n\ninterface IProps {\n  token: string | null;\n}\n\nconst FeaturedConnected: React.FC<IProps> = ({ token }: IProps) => {\n  const getFeatured = useCallback(async () => {\n    const response = await getUrl<ISpotifyFeatured>(\n      \"https://api.spotify.com/v1/browse/featured-playlists\",\n      token\n    );\n    return response\n      ? !(response as ISpotifyError).status\n        ? (response as ISpotifyFeatured).playlists\n        : (response as ISpotifyError)\n      : null;\n  }, [token]);\n\n  return <PlaylistList getSimple={getFeatured} />;\n};\n\nconst mapStateToProps = ({ token }: IState) => {\n  return { token };\n};\n\nconst Featured = connect(mapStateToProps)(FeaturedConnected);\n\nexport default Featured;\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport qs from \"query-string\";\n\nimport { ISpotifyTokenResponse } from \"interfaces/ISpotifyTokenResponse.interface\";\n\nimport { setToken } from \"redux/actions/setToken.action\";\nimport { Redirect } from \"react-router\";\n\ninterface IProps {\n  setToken: (\n    token: string | null\n  ) => {\n    type: string;\n    payload: string | null;\n  };\n}\n\nconst CallbackConnected: React.FC<IProps> = ({ setToken }: IProps) => {\n  const [redirectTo, setRedirectTo] = useState<string | null>(null);\n  useEffect(() => {\n    let cancelled = false;\n    let timeoutId: NodeJS.Timeout | null = null;\n    const params = qs.parse(window.location.hash);\n    if (params.access_token) {\n      // We know it is this type at this point so we cast to it\n      const spotifyResponse = (params as unknown) as ISpotifyTokenResponse;\n\n      // If the effect has not been cancelled we set the state\n      if (!cancelled) {\n        setToken(spotifyResponse.access_token);\n        timeoutId = setTimeout(\n          () => setToken(null),\n          Number(spotifyResponse.expires_in) * 1000\n        );\n      }\n      // Removes tokens from the url\n      if (spotifyResponse.state) {\n        setRedirectTo(spotifyResponse.state);\n      }\n    }\n    return () => {\n      cancelled = true;\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [setToken]);\n  if (redirectTo) {\n    return <Redirect to={redirectTo} />;\n  } else {\n    return <div>Redirecting...</div>;\n  }\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return { setToken: (token: string | null) => dispatch(setToken(token)) };\n};\n\nconst Callback = connect(\n  null,\n  mapDispatchToProps\n)(CallbackConnected);\n\nexport default Callback;\n","import { SET_TOKEN } from \"redux/constants/setToken.constant\";\n\nexport const setToken = (payload: string | null) => {\n  return { type: SET_TOKEN, payload };\n};\n","export const SET_TOKEN = \"setToken\";\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport Slider, { createSliderWithTooltip } from \"rc-slider\";\n\nimport classes from \"./Player.module.scss\";\n\nimport next from \"assets/icons/skip_next.svg\";\nimport previous from \"assets/icons/skip_previous.svg\";\nimport play from \"assets/icons/play.svg\";\nimport pause from \"assets/icons/pause.svg\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\nimport { setDeviceId } from \"redux/actions/setDeviceId.action\";\n\ninterface IProps {\n  token: string | null;\n  device_id: string | null;\n  setDeviceId: (\n    device_id: string | null\n  ) => {\n    type: string;\n    payload: string | null;\n  };\n}\n\nconst SilderWithTooltip = createSliderWithTooltip(Slider);\n\nconst ConnectedPlayer: React.FC<IProps> = ({\n  token,\n  device_id,\n  setDeviceId\n}: IProps) => {\n  const [paused, setPaused] = useState(true);\n  const [player, setPlayer] = useState<ISpotifyPlayer | null>(null);\n  const [currentTrack, setCurrentTrack] = useState<any | null>(null);\n  useEffect(() => {\n    if (window.Spotify && token && !device_id && !player) {\n      const playerNew = new window.Spotify.Player({\n        name: \"Drangon's Web Player\",\n        volume: 1,\n        getOAuthToken: callback => callback(token)\n      });\n\n      playerNew.addListener(\"ready\", ({ device_id }) => {\n        setDeviceId(device_id);\n      });\n\n      playerNew.addListener(\"player_state_changed\", data => {\n        setPaused(data.paused);\n        if (data.track_window && data.track_window.current_track) {\n          setCurrentTrack(data.track_window.current_track);\n        }\n        console.log(data);\n      });\n\n      playerNew.connect();\n\n      setPlayer(playerNew);\n    }\n  }, [device_id, token, setDeviceId, player]);\n  return (\n    <div className={classes.container}>\n      {player && device_id ? (\n        <React.Fragment>\n          {currentTrack ? (\n            <div className={classes.information}>\n              <img src={currentTrack.album.images[1].url} alt=\"\" />\n              <div className={classes.words}>\n                <div className={classes.trackName}>{currentTrack.name}</div>\n                <div className={classes.artist}>{currentTrack.artists[0].name}</div>\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n          <div className={classes.nowPlaying}>\n            <div className={classes.buttons}>\n              <button\n                className={`styled-button ${classes.iconButton}`}\n                onClick={() => player.previousTrack()}\n              >\n                <img src={previous} alt=\"\" />\n              </button>\n              <button\n                className={`styled-button ${classes.iconButton}`}\n                onClick={() => {\n                  player.togglePlay();\n                }}\n              >\n                <img src={paused ? play : pause} alt=\"\" />\n              </button>\n              <button\n                className={`styled-button ${classes.iconButton}`}\n                onClick={() => player.nextTrack()}\n              >\n                <img src={next} alt=\"\" />\n              </button>\n            </div>\n            <SilderWithTooltip />\n          </div>\n          <SilderWithTooltip\n            defaultValue={100}\n            min={0}\n            max={100}\n            step={1}\n            onChange={(v: number) => player.setVolume(v / 100)}\n            tipFormatter={(v: number) => `${v}%`}\n            style={{ width: 100 }}\n          />\n        </React.Fragment>\n      ) : (\n        <div>Loading...</div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ token, device_id }: IState) => {\n  return { token, device_id };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    setDeviceId: (device_id: string | null) => dispatch(setDeviceId(device_id))\n  };\n};\nconst Player = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectedPlayer);\n\nexport default Player;\n","import { SET_DEVICE_ID } from \"redux/constants/setDeviceId.constant\";\n\nexport const setDeviceId = (payload: string | null) => {\n  return { type: SET_DEVICE_ID, payload };\n};\n","export const SET_DEVICE_ID = \"setDeviceId\";\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport qs from \"query-string\";\nimport { connect } from \"react-redux\";\n\nimport classes from \"./App.module.scss\";\n\nimport Header from \"components/Header/Header.component\";\nimport Personal from \"components/Personal/Personal.component\";\nimport Featured from \"components/Featured/Featured.component\";\nimport Callback from \"components/Callback/Callback.component\";\nimport Player from \"components/Player/Player.component\";\n\nimport { ISpotifyTokenRequest } from \"interfaces/ISpotifyTokenRequest.interface\";\n\nimport { generateSpotifyAuthUrl } from \"utils/generateSpotifyAuthUrl.util\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\n\ninterface IProps {\n  token: string | null;\n}\n\nconst ConnectedApp: React.FC<IProps> = ({token }: IProps) => {\n  useEffect(() => {\n    if (!token) {\n      const params = qs.parse(window.location.hash);\n      if (!params.access_token) {\n        const requestContents: ISpotifyTokenRequest = {\n          client_id: process.env.REACT_APP_CLIENT_ID || \"\",\n          redirect_uri: process.env.REACT_APP_REDIRECT_URI || \"\",\n          response_type: \"token\",\n          scopes: [\n            \"streaming\",\n            \"user-read-birthdate\",\n            \"user-read-email\",\n            \"user-read-private\",\n            \"playlist-read-private\",\n            \"user-modify-playback-state\"\n          ],\n          state: window.location.pathname\n        };\n        window.location.assign(generateSpotifyAuthUrl(requestContents));\n      }\n    }\n  }, [token]);\n\n  return (\n    <Router>\n      <Header />\n      <div className={classes.page}>\n        <Route exact path=\"/\" render={() => <Redirect to=\"/featured\" />} />\n        <Route path=\"/personal\" component={Personal} />\n        <Route path=\"/featured\" component={Featured} />\n        <Route path=\"/callback\" component={Callback} />\n      </div>\n      <Player />\n    </Router>\n  );\n};\n\nconst mapStateToProps = ({ token, device_id }: IState) => {\n  return { token, device_id };\n};\n\nconst App = connect(\n  mapStateToProps\n)(ConnectedApp);\n\nexport default App;\n","import { ISpotifyTokenRequest } from \"interfaces/ISpotifyTokenRequest.interface\";\n\nexport const generateSpotifyAuthUrl = ({\n  client_id,\n  redirect_uri,\n  response_type,\n  scopes,\n  show_dialog,\n  state\n}: ISpotifyTokenRequest): string => {\n  // https://developer.spotify.com/documentation/general/guides/authorization-guide/\n  // Implicit flow\n  return `https://accounts.spotify.com/authorize?client_id=${client_id}&redirect_uri=${encodeURIComponent(\n    redirect_uri\n  )}&scope=${\n    scopes ? scopes.join(\" \") : \"\"\n  }&response_type=${response_type}&state=${state ? state : \"\"}&show_dialog=${\n    show_dialog ? show_dialog : \"false\"\n  }`;\n};\n","import { SET_TOKEN } from \"redux/constants/setToken.constant\";\nimport { SET_DEVICE_ID } from \"redux/constants/setDeviceId.constant\";\n\nexport interface IState {\n  token: string | null;\n  device_id: string | null;\n}\n\ninterface IAction {\n  type: string;\n  payload: any;\n}\n\nconst initialState: IState = {\n  token: null,\n  device_id: null\n};\n\nexport const rootReducer = (state = initialState, action: IAction) => {\n  if (action.type === SET_TOKEN) {\n    return { ...state, token: action.payload };\n  }\n  if (action.type === SET_DEVICE_ID) {\n    return { ...state, device_id: action.payload };\n  }\n  return state;\n};\n","import { createStore } from \"redux\";\n\nimport { rootReducer } from \"./reducers/root.reducer\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.scss\";\nimport \"rc-slider/assets/index.css\";\n\nimport App from \"components/App/App.component\";\n\nimport store from \"redux/store\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Player_container__dUuAm\",\"information\":\"Player_information__2ctRz\",\"words\":\"Player_words__2tZk5\",\"nowPlaying\":\"Player_nowPlaying__37my9\",\"buttons\":\"Player_buttons__3KGYh\",\"iconButton\":\"Player_iconButton__H_MeH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Tracks_table__3gkoP\",\"header\":\"Tracks_header__3z6Dc\",\"title\":\"Tracks_title__2jBUG\",\"content\":\"Tracks_content__2y2de\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Track_row__3MYMF\",\"elm\":\"Track_elm__3maf8\",\"artist\":\"Track_artist__2agRq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__14G2o\",\"section\":\"App_section__1vvt6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2kr8J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PlaylistList_container__2Wtta\"};","module.exports = __webpack_public_path__ + \"static/media/close.c3770f64.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__M67NJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3VE3C\"};"],"sourceRoot":""}