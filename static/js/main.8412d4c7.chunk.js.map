{"version":3,"sources":["assets/icons/skip_next.svg","assets/icons/skip_previous.svg","assets/icons/shuffle_active.svg","assets/icons/shuffle_inactive.svg","assets/icons/play.svg","assets/icons/pause.svg","assets/icons/repeat_one.svg","components/Player/Player.module.scss","components/Header/Header.component.tsx","utils/getUrl.util.ts","components/Card/Card.component.tsx","components/Modal/Modal.component.tsx","components/Track/Track.component.tsx","components/Tracks/Tracks.component.tsx","components/Playlist/Playlist.component.tsx","utils/htmlDecode.util.ts","components/PlaylistList/PlaylistList.component.tsx","components/Personal/Personal.component.tsx","components/Featured/Featured.component.tsx","components/Callback/Callback.component.tsx","redux/actions/setToken.action.ts","redux/constants/setToken.constant.ts","components/Player/Player.component.tsx","redux/actions/setDeviceId.action.ts","redux/constants/setDeviceId.constant.ts","components/App/App.component.tsx","utils/generateSpotifyAuthUrl.util.ts","redux/reducers/root.reducer.ts","redux/store.ts","serviceWorker.ts","index.tsx","components/Playlist/Playlist.module.scss","components/Tracks/Tracks.module.scss","components/Track/Track.module.scss","components/App/App.module.scss","components/Header/Header.module.scss","components/PlaylistList/PlaylistList.module.scss","assets/icons/close.svg","components/Card/Card.module.scss","components/Modal/Modal.module.scss"],"names":["module","exports","__webpack_require__","p","container","controls","information","words","nowPlaying","buttons","iconButton","Header","react_default","a","createElement","className","classes","header","react_router_dom","to","getUrl","_x","_x2","_getUrl","apply","this","arguments","_callee","url","token","response","json","regenerator_default","wrap","_context","prev","next","fetch","method","headers","concat","sent","abrupt","status","t0","console","log","stop","Card","_ref","children","containerClass","Modal","open","onBackdropClick","backdrop","onClick","_ref2","target","currentTarget","style","display","Track","connect","_ref3","device_id","track","playlistUri","play","useCallback","Object","asyncToGenerator","mark","body","context_uri","offset","uri","JSON","stringify","Content-Type","Authorization","row","elm","artist","name","artists","Tracks","initalTracks","tracks","_useState","useState","_useState2","slicedToArray","setTracks","_useState3","defineProperty","href","_useState4","cache","setCache","handlePaging","key","link","cached","objectSpread","table","title","content","items","map","Track_component","id","Math","random","previous","disabled","Playlist","_ref4","input","data","setData","setOpen","getData","useEffect","cancelled","_callee2","unfiltered","dataNew","_context2","Fragment","cover","backgroundImage","images","Modal_component","Card_component","card","src","close","alt","wrapper","createdBy","author","owner","display_name","description","DOMParser","parseFromString","documentElement","textContent","lineBreak","section","Tracks_component","PlaylistList","getSimple","playlists","setPlaylists","featuredNew","playlist","Playlist_component","Personal","getPlaylistList","PlaylistList_component","Featured","getFeatured","Callback","dispatch","setToken","type","payload","redirectTo","setRedirectTo","timeoutId","params","qs","parse","window","location","hash","access_token","spotifyResponse","setTimeout","Number","expires_in","state","clearTimeout","react_router","SilderWithTooltip","createSliderWithTooltip","Slider","Player","_ref5","setDeviceId","paused","setPaused","player","setPlayer","_useState5","_useState6","currentTrack","setCurrentTrack","_useState7","_useState8","shuffled","setShuffled","toggleShuffle","authorization","Spotify","playerNew","volume","getOAuthToken","callback","addListener","shuffle","track_window","current_track","album","trackName","shuffleActive","shuffleInactive","previousTrack","togglePlay","pause","nextTrack","repeatOne","defaultValue","min","max","step","onChange","v","setVolume","tipFormatter","width","App","requestContents","client_id","process","redirect_uri","response_type","scopes","pathname","assign","show_dialog","encodeURIComponent","join","generateSpotifyAuthUrl","Header_component","page","exact","path","render","component","Player_component","initialState","store","createStore","length","undefined","action","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","es","App_component","document","getElementById","URL","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8412d4c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/skip_next.cf9d95de.svg\";","module.exports = __webpack_public_path__ + \"static/media/skip_previous.9bb6aca1.svg\";","module.exports = __webpack_public_path__ + \"static/media/shuffle_active.8df07479.svg\";","module.exports = __webpack_public_path__ + \"static/media/shuffle_inactive.2cca4185.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.e89c0883.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.ec371d86.svg\";","module.exports = __webpack_public_path__ + \"static/media/repeat_one.7583cdf3.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Player_container__dUuAm\",\"controls\":\"Player_controls__25jRm\",\"information\":\"Player_information__2ctRz\",\"words\":\"Player_words__2tZk5\",\"nowPlaying\":\"Player_nowPlaying__37my9\",\"buttons\":\"Player_buttons__3KGYh\",\"iconButton\":\"Player_iconButton__H_MeH\"};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport classes from \"./Header.module.scss\";\n\nconst Header: React.FC = () => {\n  return (\n    <header className={classes.header}>\n      <Link\n        to=\"/featured\"\n        className=\"styled-button\"\n      >\n        Featured\n      </Link>\n      <Link\n        to=\"/personal\"\n        className=\"styled-button\"\n      >\n        Personal\n      </Link>\n    </header>\n  );\n};\n\nexport default Header;\n","import { ISpotifyError } from \"interfaces/ISpotifyError.interface\";\n\nexport async function getUrl<T>(\n  url: string,\n  token: string | null\n): Promise<T | ISpotifyError | null> {\n  if (token) {\n    try {\n      const response = await fetch(url, {\n        method: \"GET\",\n        headers: [[\"Authorization\", `Bearer ${token}`]]\n      });\n      const json = await response.json();\n      return response.status === 200 ? (json as T) : (json as ISpotifyError);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return null;\n}\n","import React from \"react\";\n\nimport classes from \"./Card.module.scss\";\n\ninterface IProps {\n  children: React.ReactNode;\n  containerClass?: string;\n}\n\nconst Card: React.FC<IProps> = ({ children, containerClass }: IProps) => {\n  return (\n    <div\n      className={`${classes.container} ${containerClass ? containerClass : \"\"}`}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport classes from \"./Modal.module.scss\";\n\ninterface IProps {\n  children: React.ReactNode;\n  open: boolean;\n  onBackdropClick: () => void;\n}\n\nconst Modal: React.FC<IProps> = ({\n  children,\n  open,\n  onBackdropClick\n}: IProps) => {\n  return (\n    <div\n      className={classes.backdrop}\n      onClick={({ target, currentTarget }) => {\n        if (target === currentTarget) {\n          onBackdropClick();\n        }\n      }}\n      style={open ? {} : { display: \"none\" }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useCallback } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport classes from \"./Track.module.scss\";\n\nimport { ISpotifyTrack } from \"interfaces/ISpotiftyTrack.interface\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\n\ninterface IProps {\n  track: ISpotifyTrack;\n  token: string | null;\n  playlistUri: string;\n  device_id: string | null;\n}\n\ninterface ISpotifyPlayBody {\n  context_uri?: string;\n  uris?: string[];\n  offset: { position: number } | { uri: string };\n  position_ms?: string;\n}\n\nconst ConnectedTrack: React.FC<IProps> = ({\n  track,\n  token,\n  playlistUri,\n  device_id\n}: IProps) => {\n  const play = useCallback(async () => {\n    if (device_id && token) {\n      const body: ISpotifyPlayBody = {\n        context_uri: playlistUri,\n        offset: { uri: track.uri }\n      };\n      await fetch(\n        `https://api.spotify.com/v1/me/player/play?device_id=${device_id}`,\n        {\n          method: \"PUT\",\n          body: JSON.stringify(body),\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        }\n      );\n    }\n  }, [token, track, playlistUri, device_id]);\n  return (\n    <div className={classes.row}>\n      <div className={classes.elm}>\n        <div className={classes.artist} onClick={play}>\n          {track.name}\n        </div>\n      </div>\n      <div className={classes.elm}>{track.artists[0].name}</div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ token, device_id }: IState) => {\n  return { token, device_id };\n};\n\nconst Track = connect(mapStateToProps)(ConnectedTrack);\n\nexport default Track;\n","import React, { useCallback, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport classes from \"./Tracks.module.scss\";\n\nimport Track from \"components/Track/Track.component\";\n\nimport { ISpotifyPaging } from \"interfaces/ISpotifyPaging.interface\";\nimport { ISpotifyPlaylistTrack } from \"interfaces/ISpotifyPlaylistTrack.inerface\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\nimport { getUrl } from \"utils/getUrl.util\";\nimport { ISpotifyError } from \"interfaces/ISpotifyError.interface\";\n\ninterface IProps {\n  tracks: ISpotifyPaging<ISpotifyPlaylistTrack[]>;\n  token: string | null;\n  playlistUri: string;\n}\n\nconst ConnectedTracks: React.FC<IProps> = ({\n  token,\n  tracks: initalTracks,\n  playlistUri\n}: IProps) => {\n  const [tracks, setTracks] = useState(initalTracks);\n  const [cache, setCache] = useState({\n    [tracks.href]: tracks\n  });\n\n  const handlePaging = useCallback(\n    async (key: \"next\" | \"previous\") => {\n      const link = tracks[key];\n      if (link) {\n        const cached = cache[link];\n        if (cached) {\n          setTracks(cached);\n          return;\n        }\n        let response = await getUrl<ISpotifyPaging<ISpotifyPlaylistTrack[]>>(\n          link,\n          token\n        );\n        if (!(response as ISpotifyError).status) {\n          response = response as ISpotifyPaging<ISpotifyPlaylistTrack[]>;\n          setCache({ ...cache, [response.href]: response });\n          setTracks(response);\n        }\n      }\n    },\n    [tracks, token, cache]\n  );\n\n  return (\n    <div className={classes.table}>\n      <div className={classes.header}>\n        <div className={classes.title}>Song</div>\n        <div className={classes.title}>Artist</div>\n      </div>\n      <div className={classes.content}>\n        {tracks.items.map(track =>\n          track.track ? (\n            <Track key={track.track.id + Math.random()} track={track.track} playlistUri={playlistUri} />\n          ) : (\n            <div key={Math.random()}>Loading...</div>\n          )\n        )}\n      </div>\n      {tracks.next || tracks.previous ? (\n        <div className={classes.buttons}>\n          {tracks.previous ? (\n            <button\n              className=\"styled-button\"\n              onClick={() => handlePaging(\"previous\")}\n            >\n              Previous\n            </button>\n          ) : (\n            <button className=\"styled-button\" disabled>\n              Previous\n            </button>\n          )}\n          {tracks.next ? (\n            <button\n              className=\"styled-button\"\n              onClick={() => handlePaging(\"next\")}\n            >\n              Next\n            </button>\n          ) : (\n            <button className=\"styled-button\" disabled>\n              Next\n            </button>\n          )}\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ token }: IState) => {\n  return { token };\n};\n\nconst Tracks = connect(mapStateToProps)(ConnectedTracks);\n\nexport default Tracks;\n","/* eslint-disable jsx-a11y/heading-has-content */\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport classes from \"./Playlist.module.scss\";\n\nimport close from \"assets/icons/close.svg\";\n\nimport Card from \"components/Card/Card.component\";\nimport Modal from \"components/Modal/Modal.component\";\nimport Tracks from \"components/Tracks/Tracks.component\";\n\nimport { ISpotifyPlaylistFull } from \"interfaces/ISpotifyPlaylist.interface\";\nimport { ISpotifyError } from \"interfaces/ISpotifyError.interface\";\n\nimport { htmlDecode } from \"utils/htmlDecode.util\";\nimport { getUrl } from \"utils/getUrl.util\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\n\ninterface IProps {\n  href: string;\n  token: string | null;\n}\n\nconst ConnectedPlaylist: React.FC<IProps> = ({ href, token }: IProps) => {\n  const [data, setData] = useState<ISpotifyPlaylistFull | null>(null);\n  const [open, setOpen] = useState(false);\n\n  const getData = useCallback(async () => {\n    return await getUrl<ISpotifyPlaylistFull>(href, token);\n  }, [href, token]);\n\n  useEffect(() => {\n    let cancelled = false;\n    (async () => {\n      const unfiltered = await getData();\n      if (unfiltered) {\n        if (!(unfiltered as ISpotifyError).status) {\n          const dataNew = unfiltered as ISpotifyPlaylistFull;\n          if (!cancelled) {\n            setData(dataNew);\n          }\n        }\n      }\n    })();\n    return () => {\n      cancelled = true;\n    };\n  }, [getData]);\n\n  return (\n    <React.Fragment>\n      <div\n        className={classes.cover}\n        onClick={() => setOpen(true)}\n        style={\n          data\n            ? {\n                backgroundImage: `url(${data.images[0].url})`\n              }\n            : {}\n        }\n      />\n      {open ? (\n        <Modal open={open} onBackdropClick={() => setOpen(false)}>\n          <Card containerClass={classes.card}>\n            <img\n              src={close}\n              alt=\"\"\n              className={classes.close}\n              onClick={() => setOpen(false)}\n            />\n            {data ? (\n              <div className={classes.wrapper}>\n                <header className={classes.header}>\n                  <h1 className={classes.title}>{data.name}</h1>\n                  <div className={classes.createdBy}>\n                    Created by{\" \"}\n                    <span className={classes.author}>\n                      {data.owner.display_name}\n                    </span>\n                  </div>\n                  <div className={classes.description}>\n                    {htmlDecode(data.description ? data.description : \"\")}\n                  </div>\n                </header>\n                <div className={classes.lineBreak} />\n                <section className={classes.section}>\n                  <Tracks tracks={data.tracks} playlistUri={data.uri} />\n                </section>\n              </div>\n            ) : (\n              \"Loading...\"\n            )}\n          </Card>\n        </Modal>\n      ) : (\n        \"\"\n      )}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({ token }: IState) => {\n  return { token };\n};\n\nconst Playlist = connect(mapStateToProps)(ConnectedPlaylist);\n\nexport default Playlist;\n","export const htmlDecode = (input: string) => {\n  const doc = new DOMParser().parseFromString(input, \"text/html\");\n  return doc.documentElement.textContent;\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport classes from \"./PlaylistList.module.scss\";\nimport Playlist from \"components/Playlist/Playlist.component\";\n\nimport { ISpotifyError } from \"interfaces/ISpotifyError.interface\";\nimport { ISpotifyPlaylistSimple } from \"interfaces/ISpotifyPlaylist.interface\";\nimport { ISpotifyPaging } from \"interfaces/ISpotifyPaging.interface\";\n\ninterface IProps {\n  getSimple: () => Promise<\n    ISpotifyPaging<ISpotifyPlaylistSimple[]> | ISpotifyError | null\n  >;\n}\n\nconst PlaylistList: React.FC<IProps> = ({ getSimple }: IProps) => {\n  const [playlists, setPlaylists] = useState<ISpotifyPaging<\n    ISpotifyPlaylistSimple[]\n  > | null>(null);\n\n  useEffect(() => {\n    let cancelled = false;\n    (async () => {\n      const unfiltered = await getSimple();\n      if (unfiltered) {\n        if (!(unfiltered as ISpotifyError).status) {\n          const featuredNew = unfiltered as ISpotifyPaging<\n            ISpotifyPlaylistSimple[]\n          >;\n          if (!cancelled) {\n            setPlaylists(featuredNew);\n          }\n        }\n      }\n    })();\n    return () => {\n      cancelled = true;\n    };\n  }, [getSimple]);\n  return (\n    <div className={classes.container}>\n      {(playlists ? playlists.items : []).map(playlist => (\n        <Playlist key={playlist.id} href={playlist.href} />\n      ))}\n    </div>\n  );\n};\n\nexport default PlaylistList;\n","import React, { useCallback } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { getUrl } from \"utils/getUrl.util\";\n\nimport PlaylistList from \"components/PlaylistList/PlaylistList.component\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\n\nimport { ISpotifyPaging } from \"interfaces/ISpotifyPaging.interface\";\nimport { ISpotifyPlaylistSimple } from \"interfaces/ISpotifyPlaylist.interface\";\n\ninterface IProps {\n  token: string | null;\n}\n\nconst PersonalConnected: React.FC<IProps> = ({ token }: IProps) => {\n  const getPlaylistList = useCallback(async () => {\n    return await getUrl<ISpotifyPaging<ISpotifyPlaylistSimple[]>>(\n      \"https://api.spotify.com/v1/me/playlists\",\n      token\n    );\n  }, [token]);\n  return <PlaylistList getSimple={getPlaylistList} />;\n};\n\nconst mapStateToProps = ({ token }: IState) => {\n  return { token };\n};\n\nconst Personal = connect(mapStateToProps)(PersonalConnected);\n\nexport default Personal;\n","import React, { useCallback } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { getUrl } from \"utils/getUrl.util\";\n\nimport PlaylistList from \"components/PlaylistList/PlaylistList.component\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\n\nimport { ISpotifyFeatured } from \"interfaces/ISpotifyFeatured.interface\";\nimport { ISpotifyError } from \"interfaces/ISpotifyError.interface\";\n\ninterface IProps {\n  token: string | null;\n}\n\nconst FeaturedConnected: React.FC<IProps> = ({ token }: IProps) => {\n  const getFeatured = useCallback(async () => {\n    const response = await getUrl<ISpotifyFeatured>(\n      \"https://api.spotify.com/v1/browse/featured-playlists\",\n      token\n    );\n    return response\n      ? !(response as ISpotifyError).status\n        ? (response as ISpotifyFeatured).playlists\n        : (response as ISpotifyError)\n      : null;\n  }, [token]);\n\n  return <PlaylistList getSimple={getFeatured} />;\n};\n\nconst mapStateToProps = ({ token }: IState) => {\n  return { token };\n};\n\nconst Featured = connect(mapStateToProps)(FeaturedConnected);\n\nexport default Featured;\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport qs from \"query-string\";\n\nimport { ISpotifyTokenResponse } from \"interfaces/ISpotifyTokenResponse.interface\";\n\nimport { setToken } from \"redux/actions/setToken.action\";\nimport { Redirect } from \"react-router\";\n\ninterface IProps {\n  setToken: (\n    token: string | null\n  ) => {\n    type: string;\n    payload: string | null;\n  };\n}\n\nconst CallbackConnected: React.FC<IProps> = ({ setToken }: IProps) => {\n  const [redirectTo, setRedirectTo] = useState<string | null>(null);\n  useEffect(() => {\n    let cancelled = false;\n    let timeoutId: NodeJS.Timeout | null = null;\n    const params = qs.parse(window.location.hash);\n    if (params.access_token) {\n      // We know it is this type at this point so we cast to it\n      const spotifyResponse = (params as unknown) as ISpotifyTokenResponse;\n\n      // If the effect has not been cancelled we set the state\n      if (!cancelled) {\n        setToken(spotifyResponse.access_token);\n        timeoutId = setTimeout(\n          () => setToken(null),\n          Number(spotifyResponse.expires_in) * 1000\n        );\n      }\n      // Removes tokens from the url\n      if (spotifyResponse.state) {\n        setRedirectTo(spotifyResponse.state);\n      }\n    }\n    return () => {\n      cancelled = true;\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [setToken]);\n  if (redirectTo) {\n    return <Redirect to={redirectTo} />;\n  } else {\n    return <div>Redirecting...</div>;\n  }\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return { setToken: (token: string | null) => dispatch(setToken(token)) };\n};\n\nconst Callback = connect(\n  null,\n  mapDispatchToProps\n)(CallbackConnected);\n\nexport default Callback;\n","import { SET_TOKEN } from \"redux/constants/setToken.constant\";\n\nexport const setToken = (payload: string | null) => {\n  return { type: SET_TOKEN, payload };\n};\n","export const SET_TOKEN = \"setToken\";\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport Slider, { createSliderWithTooltip } from \"rc-slider\";\n\nimport classes from \"./Player.module.scss\";\n\nimport next from \"assets/icons/skip_next.svg\";\nimport previous from \"assets/icons/skip_previous.svg\";\nimport shuffleActive from \"assets/icons/shuffle_active.svg\";\nimport shuffleInactive from \"assets/icons/shuffle_inactive.svg\";\nimport play from \"assets/icons/play.svg\";\nimport pause from \"assets/icons/pause.svg\";\nimport repeatInactive from \"assets/icons/repeat_inactive.svg\";\nimport repeatOne from \"assets/icons/repeat_one.svg\";\nimport repeatActive from \"assets/icons/repeat_active.svg\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\nimport { setDeviceId } from \"redux/actions/setDeviceId.action\";\n\ninterface IProps {\n  token: string | null;\n  device_id: string | null;\n  setDeviceId: (\n    device_id: string | null\n  ) => {\n    type: string;\n    payload: string | null;\n  };\n}\n\nconst SilderWithTooltip = createSliderWithTooltip(Slider);\n\nconst ConnectedPlayer: React.FC<IProps> = ({\n  token,\n  device_id,\n  setDeviceId\n}: IProps) => {\n  const [paused, setPaused] = useState(true);\n  const [player, setPlayer] = useState<ISpotifyPlayer | null>(null);\n  const [currentTrack, setCurrentTrack] = useState<any | null>(null);\n  const [shuffled, setShuffled] = useState(false);\n\n  const toggleShuffle = useCallback(async () => {\n    await fetch(\n      `https://api.spotify.com/v1/me/player/shuffle?state=${!shuffled}`,\n      {\n        method: \"PUT\",\n        headers: {\n          authorization: `Bearer ${token}`\n        }\n      }\n    );\n  }, [token, shuffled]);\n\n  const cycleRepeat = useCallback(async () => {\n    await fetch(\n      `https://api.spotify.com/v1/me/player/shuffle?state=${!shuffled}`,\n      {\n        method: \"PUT\",\n        headers: {\n          authorization: `Bearer ${token}`\n        }\n      }\n    );\n  }, [token, shuffled]);\n\n  useEffect(() => {\n    if (window.Spotify && token && !device_id && !player) {\n      const playerNew = new window.Spotify.Player({\n        name: \"Drangon's Web Player\",\n        volume: 1,\n        getOAuthToken: callback => callback(token)\n      });\n\n      playerNew.addListener(\"ready\", ({ device_id }) => {\n        setDeviceId(device_id);\n      });\n\n      playerNew.addListener(\"player_state_changed\", data => {\n        setPaused(data.paused);\n        setShuffled(data.shuffle);\n        if (data.track_window && data.track_window.current_track) {\n          setCurrentTrack(data.track_window.current_track);\n        }\n        console.log(data);\n      });\n\n      playerNew.connect();\n\n      setPlayer(playerNew);\n    }\n  }, [device_id, token, setDeviceId, player]);\n\n  return (\n    <div className={classes.container}>\n      {player && device_id ? (\n        <div className={classes.controls}>\n          {currentTrack ? (\n            <div className={classes.information}>\n              <img src={currentTrack.album.images[1].url} alt=\"\" />\n              <div className={classes.words}>\n                <div className={classes.trackName}>{currentTrack.name}</div>\n                <div className={classes.artist}>\n                  {currentTrack.artists[0].name}\n                </div>\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n          <div className={classes.nowPlaying}>\n            <div className={classes.buttons}>\n              <button\n                className={`styled-button ${classes.iconButton}`}\n                onClick={toggleShuffle}\n              >\n                <img src={shuffled ? shuffleActive : shuffleInactive} alt=\"\" />\n              </button>\n              <button\n                className={`styled-button ${classes.iconButton}`}\n                onClick={() => player.previousTrack()}\n              >\n                <img src={previous} alt=\"\" />\n              </button>\n              <button\n                className={`styled-button ${classes.iconButton}`}\n                onClick={() => {\n                  player.togglePlay();\n                }}\n              >\n                <img src={paused ? play : pause} alt=\"\" />\n              </button>\n              <button\n                className={`styled-button ${classes.iconButton}`}\n                onClick={() => player.nextTrack()}\n              >\n                <img src={next} alt=\"\" />\n              </button>{\" \"}\n              <button className={`styled-button ${classes.iconButton}`}>\n                <img src={repeatOne} alt=\"\" />\n              </button>\n            </div>\n            <SilderWithTooltip />\n          </div>\n          <SilderWithTooltip\n            defaultValue={100}\n            min={0}\n            max={100}\n            step={1}\n            onChange={(v: number) => player.setVolume(v / 100)}\n            tipFormatter={(v: number) => `${v}%`}\n            style={{ width: 100 }}\n          />\n        </div>\n      ) : (\n        <div>Loading...</div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ token, device_id }: IState) => {\n  return { token, device_id };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    setDeviceId: (device_id: string | null) => dispatch(setDeviceId(device_id))\n  };\n};\nconst Player = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectedPlayer);\n\nexport default Player;\n","import { SET_DEVICE_ID } from \"redux/constants/setDeviceId.constant\";\n\nexport const setDeviceId = (payload: string | null) => {\n  return { type: SET_DEVICE_ID, payload };\n};\n","export const SET_DEVICE_ID = \"setDeviceId\";\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport qs from \"query-string\";\nimport { connect } from \"react-redux\";\n\nimport classes from \"./App.module.scss\";\n\nimport Header from \"components/Header/Header.component\";\nimport Personal from \"components/Personal/Personal.component\";\nimport Featured from \"components/Featured/Featured.component\";\nimport Callback from \"components/Callback/Callback.component\";\nimport Player from \"components/Player/Player.component\";\n\nimport { ISpotifyTokenRequest } from \"interfaces/ISpotifyTokenRequest.interface\";\n\nimport { generateSpotifyAuthUrl } from \"utils/generateSpotifyAuthUrl.util\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\n\ninterface IProps {\n  token: string | null;\n}\n\nconst ConnectedApp: React.FC<IProps> = ({token }: IProps) => {\n  useEffect(() => {\n    if (!token) {\n      const params = qs.parse(window.location.hash);\n      if (!params.access_token) {\n        const requestContents: ISpotifyTokenRequest = {\n          client_id: process.env.REACT_APP_CLIENT_ID || \"\",\n          redirect_uri: process.env.REACT_APP_REDIRECT_URI || \"\",\n          response_type: \"token\",\n          scopes: [\n            \"streaming\",\n            \"user-read-birthdate\",\n            \"user-read-email\",\n            \"user-read-private\",\n            \"playlist-read-private\",\n            \"user-modify-playback-state\"\n          ],\n          state: window.location.pathname\n        };\n        window.location.assign(generateSpotifyAuthUrl(requestContents));\n      }\n    }\n  }, [token]);\n\n  return (\n    <Router>\n      <Header />\n      <div className={classes.page}>\n        <Route exact path=\"/\" render={() => <Redirect to=\"/featured\" />} />\n        <Route path=\"/personal\" component={Personal} />\n        <Route path=\"/featured\" component={Featured} />\n        <Route path=\"/callback\" component={Callback} />\n      </div>\n      <Player />\n    </Router>\n  );\n};\n\nconst mapStateToProps = ({ token, device_id }: IState) => {\n  return { token, device_id };\n};\n\nconst App = connect(\n  mapStateToProps\n)(ConnectedApp);\n\nexport default App;\n","import { ISpotifyTokenRequest } from \"interfaces/ISpotifyTokenRequest.interface\";\n\nexport const generateSpotifyAuthUrl = ({\n  client_id,\n  redirect_uri,\n  response_type,\n  scopes,\n  show_dialog,\n  state\n}: ISpotifyTokenRequest): string => {\n  // https://developer.spotify.com/documentation/general/guides/authorization-guide/\n  // Implicit flow\n  return `https://accounts.spotify.com/authorize?client_id=${client_id}&redirect_uri=${encodeURIComponent(\n    redirect_uri\n  )}&scope=${\n    scopes ? scopes.join(\" \") : \"\"\n  }&response_type=${response_type}&state=${state ? state : \"\"}&show_dialog=${\n    show_dialog ? show_dialog : \"false\"\n  }`;\n};\n","import { SET_TOKEN } from \"redux/constants/setToken.constant\";\nimport { SET_DEVICE_ID } from \"redux/constants/setDeviceId.constant\";\n\nexport interface IState {\n  token: string | null;\n  device_id: string | null;\n}\n\ninterface IAction {\n  type: string;\n  payload: any;\n}\n\nconst initialState: IState = {\n  token: null,\n  device_id: null\n};\n\nexport const rootReducer = (state = initialState, action: IAction) => {\n  if (action.type === SET_TOKEN) {\n    return { ...state, token: action.payload };\n  }\n  if (action.type === SET_DEVICE_ID) {\n    return { ...state, device_id: action.payload };\n  }\n  return state;\n};\n","import { createStore } from \"redux\";\n\nimport { rootReducer } from \"./reducers/root.reducer\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.scss\";\nimport \"rc-slider/assets/index.css\";\n\nimport App from \"components/App/App.component\";\n\nimport store from \"redux/store\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"Playlist_cover__3U_7L\",\"card\":\"Playlist_card__3OMCF\",\"close\":\"Playlist_close__3n1DV\",\"wrapper\":\"Playlist_wrapper__38PS6\",\"header\":\"Playlist_header__3XXLq\",\"title\":\"Playlist_title__3Fedx\",\"description\":\"Playlist_description__2WzFR\",\"createdBy\":\"Playlist_createdBy__3_wWb\",\"author\":\"Playlist_author__27M0k\",\"lineBreak\":\"Playlist_lineBreak__2IGvn\",\"section\":\"Playlist_section__14O49\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Tracks_table__3gkoP\",\"header\":\"Tracks_header__3z6Dc\",\"title\":\"Tracks_title__2jBUG\",\"content\":\"Tracks_content__2y2de\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Track_row__3MYMF\",\"elm\":\"Track_elm__3maf8\",\"artist\":\"Track_artist__2agRq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__14G2o\",\"section\":\"App_section__1vvt6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2kr8J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PlaylistList_container__2Wtta\"};","module.exports = __webpack_public_path__ + \"static/media/close.c3770f64.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__M67NJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3VE3C\"};"],"sourceRoot":""}