{"version":3,"sources":["components/Tracks/Tracks.module.scss","components/Track/Track.module.scss","components/App/App.module.scss","components/Header/Header.module.scss","components/PlaylistList/PlaylistList.module.scss","assets/icons/close.svg","components/Card/Card.module.scss","components/Modal/Modal.module.scss","components/Header/Header.component.tsx","utils/getUrl.util.ts","components/Card/Card.component.tsx","components/Modal/Modal.component.tsx","components/Track/Track.component.tsx","components/Tracks/Tracks.component.tsx","components/Playlist/Playlist.component.tsx","utils/htmlDecode.util.ts","components/PlaylistList/PlaylistList.component.tsx","components/Personal/Personal.component.tsx","components/Featured/Featured.component.tsx","components/Callback/Callback.component.tsx","redux/actions/setToken.action.ts","redux/constants/setToken.constant.ts","components/Player/Player.component.tsx","redux/actions/setDeviceId.action.ts","redux/constants/setDeviceId.constant.ts","components/App/App.component.tsx","utils/generateSpotifyAuthUrl.util.ts","redux/reducers/root.reducer.ts","redux/store.ts","serviceWorker.ts","index.tsx","components/Playlist/Playlist.module.scss"],"names":["module","exports","table","header","title","content","row","elm","artist","page","section","container","__webpack_require__","p","backdrop","Header","react_default","a","createElement","className","classes","react_router_dom","to","getUrl","_x","_x2","_getUrl","apply","this","arguments","_callee","url","token","response","json","regenerator_default","wrap","_context","prev","next","fetch","method","headers","concat","sent","abrupt","status","t0","console","log","stop","Card","_ref","children","containerClass","Modal","open","onBackdropClick","onClick","_ref2","target","currentTarget","style","display","Track","connect","_ref3","device_id","track","playlistUri","play","useCallback","Object","asyncToGenerator","mark","body","context_uri","offset","uri","JSON","stringify","Content-Type","Authorization","name","artists","Tracks","initalTracks","tracks","_useState","useState","_useState2","slicedToArray","setTracks","_useState3","defineProperty","href","_useState4","cache","setCache","handlePaging","key","link","cached","objectSpread","items","map","Track_component","id","Math","random","previous","buttons","disabled","Playlist","_ref4","input","data","setData","setOpen","getData","useEffect","cancelled","_callee2","unfiltered","dataNew","_context2","Fragment","cover","backgroundImage","images","Modal_component","Card_component","card","src","close","alt","wrapper","createdBy","author","owner","display_name","description","DOMParser","parseFromString","documentElement","textContent","lineBreak","Tracks_component","PlaylistList","getSimple","playlists","setPlaylists","featuredNew","playlist","Playlist_component","Personal","getPlaylistList","PlaylistList_component","Featured","getFeatured","Callback","dispatch","setToken","type","payload","redirectTo","setRedirectTo","timeoutId","params","qs","parse","window","location","hash","access_token","spotifyResponse","setTimeout","Number","expires_in","state","clearTimeout","react_router","Player","setDeviceId","Spotify","playerNew","volume","getOAuthToken","callback","addListener","App","requestContents","client_id","process","redirect_uri","response_type","scopes","pathname","assign","show_dialog","encodeURIComponent","join","generateSpotifyAuthUrl","Header_component","exact","path","render","component","Player_component","initialState","store","createStore","length","undefined","action","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","es","App_component","document","getElementById","URL","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7ea773d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Tracks_table__3gkoP\",\"header\":\"Tracks_header__3z6Dc\",\"title\":\"Tracks_title__2jBUG\",\"content\":\"Tracks_content__2y2de\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Track_row__3MYMF\",\"elm\":\"Track_elm__3maf8\",\"artist\":\"Track_artist__2agRq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__14G2o\",\"section\":\"App_section__1vvt6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2kr8J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PlaylistList_container__2Wtta\"};","module.exports = __webpack_public_path__ + \"static/media/close.84e833e5.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__M67NJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3VE3C\"};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport classes from \"./Header.module.scss\";\n\nconst Header: React.FC = () => {\n  return (\n    <header className={classes.header}>\n      <Link\n        to=\"/featured\"\n        className=\"styled-button\"\n      >\n        Featured\n      </Link>\n      <Link\n        to=\"/personal\"\n        className=\"styled-button\"\n      >\n        Personal\n      </Link>\n    </header>\n  );\n};\n\nexport default Header;\n","import { ISpotifyError } from \"interfaces/ISpotifyError.interface\";\n\nexport async function getUrl<T>(\n  url: string,\n  token: string | null\n): Promise<T | ISpotifyError | null> {\n  if (token) {\n    try {\n      const response = await fetch(url, {\n        method: \"GET\",\n        headers: [[\"Authorization\", `Bearer ${token}`]]\n      });\n      const json = await response.json();\n      return response.status === 200 ? (json as T) : (json as ISpotifyError);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return null;\n}\n","import React from \"react\";\n\nimport classes from \"./Card.module.scss\";\n\ninterface IProps {\n  children: React.ReactNode;\n  containerClass?: string;\n}\n\nconst Card: React.FC<IProps> = ({ children, containerClass }: IProps) => {\n  return (\n    <div\n      className={`${classes.container} ${containerClass ? containerClass : \"\"}`}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport classes from \"./Modal.module.scss\";\n\ninterface IProps {\n  children: React.ReactNode;\n  open: boolean;\n  onBackdropClick: () => void;\n}\n\nconst Modal: React.FC<IProps> = ({\n  children,\n  open,\n  onBackdropClick\n}: IProps) => {\n  return (\n    <div\n      className={classes.backdrop}\n      onClick={({ target, currentTarget }) => {\n        if (target === currentTarget) {\n          onBackdropClick();\n        }\n      }}\n      style={open ? {} : { display: \"none\" }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useCallback } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport classes from \"./Track.module.scss\";\n\nimport { ISpotifyTrack } from \"interfaces/ISpotiftyTrack.interface\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\n\ninterface IProps {\n  track: ISpotifyTrack;\n  token: string | null;\n  playlistUri: string;\n  device_id: string | null;\n}\n\ninterface ISpotifyPlayBody {\n  context_uri?: string;\n  uris?: string[];\n  offset: { position: number } | { uri: string };\n  position_ms?: string;\n}\n\nconst ConnectedTrack: React.FC<IProps> = ({\n  track,\n  token,\n  playlistUri,\n  device_id\n}: IProps) => {\n  const play = useCallback(async () => {\n    if (device_id && token) {\n      const body: ISpotifyPlayBody = {\n        context_uri: playlistUri,\n        offset: { uri: track.uri }\n      };\n      await fetch(\n        `https://api.spotify.com/v1/me/player/play?device_id=${device_id}`,\n        {\n          method: \"PUT\",\n          body: JSON.stringify(body),\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        }\n      );\n    }\n  }, [token, track, playlistUri, device_id]);\n  return (\n    <div className={classes.row}>\n      <div className={classes.elm}>\n        <div className={classes.artist} onClick={play}>\n          {track.name}\n        </div>\n      </div>\n      <div className={classes.elm}>{track.artists[0].name}</div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ token, device_id }: IState) => {\n  return { token, device_id };\n};\n\nconst Track = connect(mapStateToProps)(ConnectedTrack);\n\nexport default Track;\n","import React, { useCallback, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport classes from \"./Tracks.module.scss\";\n\nimport Track from \"components/Track/Track.component\";\n\nimport { ISpotifyPaging } from \"interfaces/ISpotifyPaging.interface\";\nimport { ISpotifyPlaylistTrack } from \"interfaces/ISpotifyPlaylistTrack.inerface\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\nimport { getUrl } from \"utils/getUrl.util\";\nimport { ISpotifyError } from \"interfaces/ISpotifyError.interface\";\n\ninterface IProps {\n  tracks: ISpotifyPaging<ISpotifyPlaylistTrack[]>;\n  token: string | null;\n  playlistUri: string;\n}\n\nconst ConnectedTracks: React.FC<IProps> = ({\n  token,\n  tracks: initalTracks,\n  playlistUri\n}: IProps) => {\n  const [tracks, setTracks] = useState(initalTracks);\n  const [cache, setCache] = useState({\n    [tracks.href]: tracks\n  });\n\n  const handlePaging = useCallback(\n    async (key: \"next\" | \"previous\") => {\n      const link = tracks[key];\n      if (link) {\n        const cached = cache[link];\n        if (cached) {\n          setTracks(cached);\n          return;\n        }\n        let response = await getUrl<ISpotifyPaging<ISpotifyPlaylistTrack[]>>(\n          link,\n          token\n        );\n        if (!(response as ISpotifyError).status) {\n          response = response as ISpotifyPaging<ISpotifyPlaylistTrack[]>;\n          setCache({ ...cache, [response.href]: response });\n          setTracks(response);\n        }\n      }\n    },\n    [tracks, token, cache]\n  );\n\n  return (\n    <div className={classes.table}>\n      <div className={classes.header}>\n        <div className={classes.title}>Song</div>\n        <div className={classes.title}>Artist</div>\n      </div>\n      <div className={classes.content}>\n        {tracks.items.map(track =>\n          track.track ? (\n            <Track key={track.track.id + Math.random()} track={track.track} playlistUri={playlistUri} />\n          ) : (\n            <div key={Math.random()}>Loading...</div>\n          )\n        )}\n      </div>\n      {tracks.next || tracks.previous ? (\n        <div className={classes.buttons}>\n          {tracks.previous ? (\n            <button\n              className=\"styled-button\"\n              onClick={() => handlePaging(\"previous\")}\n            >\n              Previous\n            </button>\n          ) : (\n            <button className=\"styled-button\" disabled>\n              Previous\n            </button>\n          )}\n          {tracks.next ? (\n            <button\n              className=\"styled-button\"\n              onClick={() => handlePaging(\"next\")}\n            >\n              Next\n            </button>\n          ) : (\n            <button className=\"styled-button\" disabled>\n              Next\n            </button>\n          )}\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ token }: IState) => {\n  return { token };\n};\n\nconst Tracks = connect(mapStateToProps)(ConnectedTracks);\n\nexport default Tracks;\n","/* eslint-disable jsx-a11y/heading-has-content */\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport classes from \"./Playlist.module.scss\";\n\nimport close from \"assets/icons/close.svg\";\n\nimport Card from \"components/Card/Card.component\";\nimport Modal from \"components/Modal/Modal.component\";\nimport Tracks from \"components/Tracks/Tracks.component\";\n\nimport { ISpotifyPlaylistFull } from \"interfaces/ISpotifyPlaylist.interface\";\nimport { ISpotifyError } from \"interfaces/ISpotifyError.interface\";\n\nimport { htmlDecode } from \"utils/htmlDecode.util\";\nimport { getUrl } from \"utils/getUrl.util\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\n\ninterface IProps {\n  href: string;\n  token: string | null;\n}\n\nconst ConnectedPlaylist: React.FC<IProps> = ({ href, token }: IProps) => {\n  const [data, setData] = useState<ISpotifyPlaylistFull | null>(null);\n  const [open, setOpen] = useState(false);\n\n  const getData = useCallback(async () => {\n    return await getUrl<ISpotifyPlaylistFull>(href, token);\n  }, [href, token]);\n\n  useEffect(() => {\n    let cancelled = false;\n    (async () => {\n      const unfiltered = await getData();\n      if (unfiltered) {\n        if (!(unfiltered as ISpotifyError).status) {\n          const dataNew = unfiltered as ISpotifyPlaylistFull;\n          if (!cancelled) {\n            setData(dataNew);\n          }\n        }\n      }\n    })();\n    return () => {\n      cancelled = true;\n    };\n  }, [getData]);\n\n  return (\n    <React.Fragment>\n      <div\n        className={classes.cover}\n        onClick={() => setOpen(true)}\n        style={\n          data\n            ? {\n                backgroundImage: `url(${data.images[0].url})`\n              }\n            : {}\n        }\n      />\n      {open ? (\n        <Modal open={open} onBackdropClick={() => setOpen(false)}>\n          <Card containerClass={classes.card}>\n            <img\n              src={close}\n              alt=\"\"\n              className={classes.close}\n              onClick={() => setOpen(false)}\n            />\n            {data ? (\n              <div className={classes.wrapper}>\n                <header className={classes.header}>\n                  <h1 className={classes.title}>{data.name}</h1>\n                  <div className={classes.createdBy}>\n                    Created by{\" \"}\n                    <span className={classes.author}>\n                      {data.owner.display_name}\n                    </span>\n                  </div>\n                  <div className={classes.description}>\n                    {htmlDecode(data.description ? data.description : \"\")}\n                  </div>\n                </header>\n                <div className={classes.lineBreak} />\n                <section className={classes.section}>\n                  <Tracks tracks={data.tracks} playlistUri={data.uri} />\n                </section>\n              </div>\n            ) : (\n              \"Loading...\"\n            )}\n          </Card>\n        </Modal>\n      ) : (\n        \"\"\n      )}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({ token }: IState) => {\n  return { token };\n};\n\nconst Playlist = connect(mapStateToProps)(ConnectedPlaylist);\n\nexport default Playlist;\n","export const htmlDecode = (input: string) => {\n  const doc = new DOMParser().parseFromString(input, \"text/html\");\n  return doc.documentElement.textContent;\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport classes from \"./PlaylistList.module.scss\";\nimport Playlist from \"components/Playlist/Playlist.component\";\n\nimport { ISpotifyError } from \"interfaces/ISpotifyError.interface\";\nimport { ISpotifyPlaylistSimple } from \"interfaces/ISpotifyPlaylist.interface\";\nimport { ISpotifyPaging } from \"interfaces/ISpotifyPaging.interface\";\n\ninterface IProps {\n  getSimple: () => Promise<\n    ISpotifyPaging<ISpotifyPlaylistSimple[]> | ISpotifyError | null\n  >;\n}\n\nconst PlaylistList: React.FC<IProps> = ({ getSimple }: IProps) => {\n  const [playlists, setPlaylists] = useState<ISpotifyPaging<\n    ISpotifyPlaylistSimple[]\n  > | null>(null);\n\n  useEffect(() => {\n    let cancelled = false;\n    (async () => {\n      const unfiltered = await getSimple();\n      if (unfiltered) {\n        if (!(unfiltered as ISpotifyError).status) {\n          const featuredNew = unfiltered as ISpotifyPaging<\n            ISpotifyPlaylistSimple[]\n          >;\n          if (!cancelled) {\n            setPlaylists(featuredNew);\n          }\n        }\n      }\n    })();\n    return () => {\n      cancelled = true;\n    };\n  }, [getSimple]);\n  return (\n    <div className={classes.container}>\n      {(playlists ? playlists.items : []).map(playlist => (\n        <Playlist key={playlist.id} href={playlist.href} />\n      ))}\n    </div>\n  );\n};\n\nexport default PlaylistList;\n","import React, { useCallback } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { getUrl } from \"utils/getUrl.util\";\n\nimport PlaylistList from \"components/PlaylistList/PlaylistList.component\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\n\nimport { ISpotifyPaging } from \"interfaces/ISpotifyPaging.interface\";\nimport { ISpotifyPlaylistSimple } from \"interfaces/ISpotifyPlaylist.interface\";\n\ninterface IProps {\n  token: string | null;\n}\n\nconst PersonalConnected: React.FC<IProps> = ({ token }: IProps) => {\n  const getPlaylistList = useCallback(async () => {\n    return await getUrl<ISpotifyPaging<ISpotifyPlaylistSimple[]>>(\n      \"https://api.spotify.com/v1/me/playlists\",\n      token\n    );\n  }, [token]);\n  return <PlaylistList getSimple={getPlaylistList} />;\n};\n\nconst mapStateToProps = ({ token }: IState) => {\n  return { token };\n};\n\nconst Personal = connect(mapStateToProps)(PersonalConnected);\n\nexport default Personal;\n","import React, { useCallback } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { getUrl } from \"utils/getUrl.util\";\n\nimport PlaylistList from \"components/PlaylistList/PlaylistList.component\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\n\nimport { ISpotifyFeatured } from \"interfaces/ISpotifyFeatured.interface\";\nimport { ISpotifyError } from \"interfaces/ISpotifyError.interface\";\n\ninterface IProps {\n  token: string | null;\n}\n\nconst FeaturedConnected: React.FC<IProps> = ({ token }: IProps) => {\n  const getFeatured = useCallback(async () => {\n    const response = await getUrl<ISpotifyFeatured>(\n      \"https://api.spotify.com/v1/browse/featured-playlists\",\n      token\n    );\n    return response\n      ? !(response as ISpotifyError).status\n        ? (response as ISpotifyFeatured).playlists\n        : (response as ISpotifyError)\n      : null;\n  }, [token]);\n\n  return <PlaylistList getSimple={getFeatured} />;\n};\n\nconst mapStateToProps = ({ token }: IState) => {\n  return { token };\n};\n\nconst Featured = connect(mapStateToProps)(FeaturedConnected);\n\nexport default Featured;\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport qs from \"query-string\";\n\nimport { ISpotifyTokenResponse } from \"interfaces/ISpotifyTokenResponse.interface\";\n\nimport { setToken } from \"redux/actions/setToken.action\";\nimport { Redirect } from \"react-router\";\n\ninterface IProps {\n  setToken: (\n    token: string | null\n  ) => {\n    type: string;\n    payload: string | null;\n  };\n}\n\nconst CallbackConnected: React.FC<IProps> = ({ setToken }: IProps) => {\n  const [redirectTo, setRedirectTo] = useState<string | null>(null);\n  useEffect(() => {\n    let cancelled = false;\n    let timeoutId: NodeJS.Timeout | null = null;\n    const params = qs.parse(window.location.hash);\n    if (params.access_token) {\n      // We know it is this type at this point so we cast to it\n      const spotifyResponse = (params as unknown) as ISpotifyTokenResponse;\n\n      // If the effect has not been cancelled we set the state\n      if (!cancelled) {\n        setToken(spotifyResponse.access_token);\n        timeoutId = setTimeout(\n          () => setToken(null),\n          Number(spotifyResponse.expires_in) * 1000\n        );\n      }\n      // Removes tokens from the url\n      if (spotifyResponse.state) {\n        setRedirectTo(spotifyResponse.state);\n      }\n    }\n    return () => {\n      cancelled = true;\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [setToken]);\n  if (redirectTo) {\n    return <Redirect to={redirectTo} />;\n  } else {\n    return <div>Redirecting...</div>;\n  }\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return { setToken: (token: string | null) => dispatch(setToken(token)) };\n};\n\nconst Callback = connect(\n  null,\n  mapDispatchToProps\n)(CallbackConnected);\n\nexport default Callback;\n","import { SET_TOKEN } from \"redux/constants/setToken.constant\";\n\nexport const setToken = (payload: string | null) => {\n  return { type: SET_TOKEN, payload };\n};\n","export const SET_TOKEN = \"setToken\";\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\nimport { setDeviceId } from \"redux/actions/setDeviceId.action\";\n\ninterface IProps {\n  token: string | null;\n  device_id: string | null;\n  setDeviceId: (\n    device_id: string | null\n  ) => {\n    type: string;\n    payload: string | null;\n  };\n}\n\nconst ConnectedPlayer: React.FC<IProps> = ({\n  token,\n  device_id,\n  setDeviceId\n}: IProps) => {\n  useEffect(() => {\n    if (window.Spotify && token && !device_id) {\n      const playerNew = new window.Spotify.Player({\n        name: \"Drangon's Web Player\",\n        volume: 1,\n        getOAuthToken: callback => callback(token)\n      });\n\n      playerNew.addListener(\"ready\", ({ device_id }) => {\n        setDeviceId(device_id);\n      });\n\n      playerNew.connect();\n    }\n  }, [device_id, token, setDeviceId]);\n  return <div>{device_id ? device_id : \"loading\"}</div>;\n};\n\nconst mapStateToProps = ({ token, device_id }: IState) => {\n  return { token, device_id };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    setDeviceId: (device_id: string | null) => dispatch(setDeviceId(device_id))\n  };\n};\nconst Player = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectedPlayer);\n\nexport default Player;\n","import { SET_DEVICE_ID } from \"redux/constants/setDeviceId.constant\";\n\nexport const setDeviceId = (payload: string | null) => {\n  return { type: SET_DEVICE_ID, payload };\n};\n","export const SET_DEVICE_ID = \"setDeviceId\";\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport qs from \"query-string\";\nimport { connect } from \"react-redux\";\n\nimport classes from \"./App.module.scss\";\n\nimport Header from \"components/Header/Header.component\";\nimport Personal from \"components/Personal/Personal.component\";\nimport Featured from \"components/Featured/Featured.component\";\nimport Callback from \"components/Callback/Callback.component\";\n\nimport { ISpotifyTokenRequest } from \"interfaces/ISpotifyTokenRequest.interface\";\n\nimport { generateSpotifyAuthUrl } from \"utils/generateSpotifyAuthUrl.util\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\nimport Player from \"components/Player/Player.component\";\n\ninterface IProps {\n  token: string | null;\n}\n\nconst ConnectedApp: React.FC<IProps> = ({token }: IProps) => {\n  useEffect(() => {\n    if (!token) {\n      const params = qs.parse(window.location.hash);\n      if (!params.access_token) {\n        const requestContents: ISpotifyTokenRequest = {\n          client_id: process.env.REACT_APP_CLIENT_ID || \"\",\n          redirect_uri: process.env.REACT_APP_REDIRECT_URI || \"\",\n          response_type: \"token\",\n          scopes: [\n            \"streaming\",\n            \"user-read-birthdate\",\n            \"user-read-email\",\n            \"user-read-private\",\n            \"playlist-read-private\",\n            \"user-modify-playback-state\"\n          ],\n          state: window.location.pathname\n        };\n        window.location.assign(generateSpotifyAuthUrl(requestContents));\n      }\n    }\n  }, [token]);\n\n  return (\n    <Router>\n      <Header />\n      <div className={classes.page}>\n        <Route exact path=\"/\" render={() => <Redirect to=\"/featured\" />} />\n        <Route path=\"/personal\" component={Personal} />\n        <Route path=\"/featured\" component={Featured} />\n        <Route path=\"/callback\" component={Callback} />\n      </div>\n      <Player />\n    </Router>\n  );\n};\n\nconst mapStateToProps = ({ token, device_id }: IState) => {\n  return { token, device_id };\n};\n\nconst App = connect(\n  mapStateToProps\n)(ConnectedApp);\n\nexport default App;\n","import { ISpotifyTokenRequest } from \"interfaces/ISpotifyTokenRequest.interface\";\n\nexport const generateSpotifyAuthUrl = ({\n  client_id,\n  redirect_uri,\n  response_type,\n  scopes,\n  show_dialog,\n  state\n}: ISpotifyTokenRequest): string => {\n  // https://developer.spotify.com/documentation/general/guides/authorization-guide/\n  // Implicit flow\n  return `https://accounts.spotify.com/authorize?client_id=${client_id}&redirect_uri=${encodeURIComponent(\n    redirect_uri\n  )}&scope=${\n    scopes ? scopes.join(\" \") : \"\"\n  }&response_type=${response_type}&state=${state ? state : \"\"}&show_dialog=${\n    show_dialog ? show_dialog : \"false\"\n  }`;\n};\n","import { SET_TOKEN } from \"redux/constants/setToken.constant\";\nimport { SET_DEVICE_ID } from \"redux/constants/setDeviceId.constant\";\n\nexport interface IState {\n  token: string | null;\n  device_id: string | null;\n}\n\ninterface IAction {\n  type: string;\n  payload: any;\n}\n\nconst initialState: IState = {\n  token: null,\n  device_id: null\n};\n\nexport const rootReducer = (state = initialState, action: IAction) => {\n  if (action.type === SET_TOKEN) {\n    return { ...state, token: action.payload };\n  }\n  if (action.type === SET_DEVICE_ID) {\n    return { ...state, device_id: action.payload };\n  }\n  return state;\n};\n","import { createStore } from \"redux\";\n\nimport { rootReducer } from \"./reducers/root.reducer\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.scss\";\n\nimport App from \"components/App/App.component\";\n\nimport store from \"redux/store\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"Playlist_cover__3U_7L\",\"card\":\"Playlist_card__3OMCF\",\"close\":\"Playlist_close__3n1DV\",\"wrapper\":\"Playlist_wrapper__38PS6\",\"header\":\"Playlist_header__3XXLq\",\"title\":\"Playlist_title__3Fedx\",\"description\":\"Playlist_description__2WzFR\",\"createdBy\":\"Playlist_createdBy__3_wWb\",\"author\":\"Playlist_author__27M0k\",\"lineBreak\":\"Playlist_lineBreak__2IGvn\",\"section\":\"Playlist_section__14O49\"};"],"sourceRoot":""}