{"version":3,"sources":["components/Tracks/Tracks.module.scss","components/Header/Header.module.scss","components/Track/Track.module.scss","components/App/App.module.scss","components/Playlist/Playlist.module.scss","components/PlaylistList/PlaylistList.module.scss","assets/icons/close.svg","components/Card/Card.module.scss","components/Modal/Modal.module.scss","components/Header/Header.component.tsx","utils/getUrl.util.ts","components/Card/Card.component.tsx","components/Modal/Modal.component.tsx","components/Track/Track.component.tsx","components/Tracks/Tracks.component.tsx","components/Playlist/Playlist.component.tsx","utils/htmlDecode.util.ts","components/PlaylistList/PlaylistList.component.tsx","components/Personal/Personal.component.tsx","components/Featured/Featured.component.tsx","components/Callback/Callback.component.tsx","redux/actions/setToken.action.ts","redux/constants/setToken.constant.ts","components/App/App.component.tsx","utils/generateSpotifyAuthUrl.util.ts","redux/reducers/root.reducer.ts","redux/store.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","table","header","button","row","elm","page","section","cover","card","close","wrapper","title","description","createdBy","author","lineBreak","buttons","container","__webpack_require__","p","backdrop","Header","react_default","a","createElement","className","classes","react_router_dom","to","getUrl","_x","_x2","_getUrl","apply","this","arguments","_callee","url","token","response","json","regenerator_default","wrap","_context","prev","next","fetch","method","headers","concat","sent","abrupt","status","t0","console","log","stop","Card","_ref","children","containerClass","Modal","open","onBackdropClick","onClick","_ref2","target","currentTarget","style","display","Track","track","name","artists","Tracks","tracks","thead","tr","tbody","items","map","Track_component","key","id","Math","random","Playlist","connect","_ref4","input","href","_useState","useState","_useState2","Object","slicedToArray","data","setData","_useState3","_useState4","setOpen","getData","useCallback","asyncToGenerator","mark","useEffect","cancelled","_callee2","unfiltered","dataNew","_context2","Fragment","backgroundImage","images","Modal_component","Card_component","src","alt","owner","display_name","DOMParser","parseFromString","documentElement","textContent","Tracks_component","PlaylistList","getSimple","playlists","setPlaylists","featuredNew","playlist","Playlist_component","Personal","_ref3","getPlaylistList","PlaylistList_component","Featured","getFeatured","Callback","dispatch","setToken","type","payload","redirectTo","setRedirectTo","timeoutId","params","qs","parse","window","location","hash","access_token","spotifyResponse","setTimeout","Number","expires_in","state","clearTimeout","react_router","App","requestContents","client_id","process","redirect_uri","response_type","scopes","pathname","assign","show_dialog","encodeURIComponent","join","generateSpotifyAuthUrl","Header_component","exact","path","render","component","initialState","store","createStore","length","undefined","action","objectSpread","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","es","App_component","document","getElementById","URL","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ad966b7b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Tracks_table__3gkoP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2kr8J\",\"button\":\"Header_button__w7eHc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Track_row__3MYMF\",\"elm\":\"Track_elm__3maf8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__14G2o\",\"section\":\"App_section__1vvt6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"Playlist_cover__3U_7L\",\"card\":\"Playlist_card__3OMCF\",\"close\":\"Playlist_close__3n1DV\",\"wrapper\":\"Playlist_wrapper__38PS6\",\"header\":\"Playlist_header__3XXLq\",\"title\":\"Playlist_title__3Fedx\",\"description\":\"Playlist_description__2WzFR\",\"createdBy\":\"Playlist_createdBy__3_wWb\",\"author\":\"Playlist_author__27M0k\",\"lineBreak\":\"Playlist_lineBreak__2IGvn\",\"section\":\"Playlist_section__14O49\",\"buttons\":\"Playlist_buttons__1n9jL\",\"button\":\"Playlist_button__2MUdi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PlaylistList_container__2Wtta\"};","module.exports = __webpack_public_path__ + \"static/media/close.84e833e5.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__M67NJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3VE3C\"};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport classes from \"./Header.module.scss\";\n\nconst Header: React.FC = () => {\n  return (\n    <header className={classes.header}>\n      <Link\n        to=\"/featured\"\n        className={classes.button}\n      >\n        Featured\n      </Link>\n      <Link\n        to=\"/personal\"\n        className={classes.button}\n      >\n        Personal\n      </Link>\n    </header>\n  );\n};\n\nexport default Header;\n","import { ISpotifyError } from \"interfaces/ISpotifyError.interface\";\n\nexport async function getUrl<T>(\n  url: string,\n  token: string | null\n): Promise<T | ISpotifyError | null> {\n  if (token) {\n    try {\n      const response = await fetch(url, {\n        method: \"GET\",\n        headers: [[\"Authorization\", `Bearer ${token}`]]\n      });\n      const json = await response.json();\n      return response.status === 200 ? (json as T) : (json as ISpotifyError);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return null;\n}\n","import React from \"react\";\n\nimport classes from \"./Card.module.scss\";\n\ninterface IProps {\n  children: React.ReactNode;\n  containerClass?: string;\n}\n\nconst Card: React.FC<IProps> = ({ children, containerClass }: IProps) => {\n  return (\n    <div\n      className={`${classes.container} ${containerClass ? containerClass : \"\"}`}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport classes from \"./Modal.module.scss\";\n\ninterface IProps {\n  children: React.ReactNode;\n  open: boolean;\n  onBackdropClick: () => void;\n}\n\nconst Modal: React.FC<IProps> = ({\n  children,\n  open,\n  onBackdropClick\n}: IProps) => {\n  return (\n    <div\n      className={classes.backdrop}\n      onClick={({ target, currentTarget }) => {\n        if (target === currentTarget) {\n          onBackdropClick();\n        }\n      }}\n      style={open ? {} : { display: \"none\" }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\n\nimport classes from \"./Track.module.scss\";\n\nimport { ISpotifyTrack } from \"interfaces/ISpotiftyTrack.interface\";\n\n\ninterface IProps {\n  track: ISpotifyTrack;\n}\n\nconst Track: React.FC<IProps> = ({ track }: IProps) => {\n  return (\n    <tr className={classes.row}>\n      <td className={classes.elm}>{track.name}</td>\n      <td>{track.artists[0].name}</td>\n    </tr>\n  );\n};\n\nexport default Track;\n","import React from \"react\";\n\nimport classes from \"./Tracks.module.scss\";\n\nimport Track from \"components/Track/Track.component\";\n\nimport { ISpotifyPaging } from \"interfaces/ISpotifyPaging.interface\";\nimport { ISpotifyPlaylistTrack } from \"interfaces/ISpotifyPlaylistTrack.inerface\";\n\ninterface IProps {\n  tracks: ISpotifyPaging<ISpotifyPlaylistTrack[]>;\n}\n\nconst Tracks: React.FC<IProps> = ({ tracks }: IProps) => {\n  return (\n    <table className={classes.table}>\n      <thead className={classes.thead}>\n        <tr className={classes.tr}>\n          <th>Song</th>\n          <th>Artist</th>\n        </tr>\n      </thead>\n      <tbody className={classes.tbody}>\n        {tracks.items.map(track => (\n          <Track key={track.track.id + Math.random()} track={track.track} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Tracks;\n","/* eslint-disable jsx-a11y/heading-has-content */\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport classes from \"./Playlist.module.scss\";\n\nimport close from \"assets/icons/close.svg\";\n\nimport Card from \"components/Card/Card.component\";\nimport Modal from \"components/Modal/Modal.component\";\nimport Tracks from \"components/Tracks/Tracks.component\";\n\nimport { ISpotifyPlaylistFull } from \"interfaces/ISpotifyPlaylist.interface\";\nimport { ISpotifyError } from \"interfaces/ISpotifyError.interface\";\n\nimport { htmlDecode } from \"utils/htmlDecode.util\";\nimport { getUrl } from \"utils/getUrl.util\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\n\ninterface IProps {\n  href: string;\n  token: string | null;\n}\n\nconst ConnectedPlaylist: React.FC<IProps> = ({ href, token }: IProps) => {\n  const [data, setData] = useState<ISpotifyPlaylistFull | null>(null);\n  const [open, setOpen] = useState(false);\n\n  const getData = useCallback(async () => {\n    return await getUrl<ISpotifyPlaylistFull>(href, token);\n  }, [href, token]);\n\n  useEffect(() => {\n    let cancelled = false;\n    (async () => {\n      const unfiltered = await getData();\n      if (unfiltered) {\n        if (!(unfiltered as ISpotifyError).status) {\n          const dataNew = unfiltered as ISpotifyPlaylistFull;\n          if (!cancelled) {\n            setData(dataNew);\n          }\n        }\n      }\n    })();\n    return () => {\n      cancelled = true;\n    };\n  }, [getData]);\n\n  return (\n    <React.Fragment>\n      <div\n        className={classes.cover}\n        onClick={() => setOpen(true)}\n        style={\n          data\n            ? {\n                backgroundImage: `url(${data.images[0].url})`\n              }\n            : {}\n        }\n      />\n      <Modal open={open} onBackdropClick={() => setOpen(false)}>\n        <Card containerClass={classes.card}>\n          <img\n            src={close}\n            alt=\"\"\n            className={classes.close}\n            onClick={() => setOpen(false)}\n          />\n          {data ? (\n            <div className={classes.wrapper}>\n              <header className={classes.header}>\n                <h1 className={classes.title}>{data.name}</h1>\n                <div className={classes.createdBy}>\n                  Created by{\" \"}\n                  <span className={classes.author}>\n                    {data.owner.display_name}\n                  </span>\n                </div>\n                <div className={classes.description}>\n                  {htmlDecode(data.description ? data.description : \"\")}\n                </div>\n              </header>\n              <div className={classes.lineBreak} />\n              <section className={classes.section}>\n                <Tracks tracks={data.tracks} />\n              </section>\n              <section className={classes.buttons}>\n                <button className={classes.button}>Abc</button>\n              </section>\n            </div>\n          ) : (\n            \"Loading...\"\n          )}\n        </Card>\n      </Modal>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({ token }: IState) => {\n  return { token };\n};\n\nconst Playlist = connect(mapStateToProps)(ConnectedPlaylist);\n\nexport default Playlist;\n","export const htmlDecode = (input: string) => {\n  const doc = new DOMParser().parseFromString(input, \"text/html\");\n  return doc.documentElement.textContent;\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport classes from \"./PlaylistList.module.scss\";\nimport Playlist from \"components/Playlist/Playlist.component\";\n\nimport { ISpotifyError } from \"interfaces/ISpotifyError.interface\";\nimport { ISpotifyPlaylistSimple } from \"interfaces/ISpotifyPlaylist.interface\";\nimport { ISpotifyPaging } from \"interfaces/ISpotifyPaging.interface\";\n\ninterface IProps {\n  getSimple: () => Promise<\n    ISpotifyPaging<ISpotifyPlaylistSimple[]> | ISpotifyError | null\n  >;\n}\n\nconst PlaylistList: React.FC<IProps> = ({ getSimple }: IProps) => {\n  const [playlists, setPlaylists] = useState<ISpotifyPaging<\n    ISpotifyPlaylistSimple[]\n  > | null>(null);\n\n  useEffect(() => {\n    let cancelled = false;\n    (async () => {\n      const unfiltered = await getSimple();\n      if (unfiltered) {\n        if (!(unfiltered as ISpotifyError).status) {\n          const featuredNew = unfiltered as ISpotifyPaging<\n            ISpotifyPlaylistSimple[]\n          >;\n          if (!cancelled) {\n            setPlaylists(featuredNew);\n          }\n        }\n      }\n    })();\n    return () => {\n      cancelled = true;\n    };\n  }, [getSimple]);\n  return (\n    <div className={classes.container}>\n      {(playlists ? playlists.items : []).map(playlist => (\n        <Playlist key={playlist.id} href={playlist.href} />\n      ))}\n    </div>\n  );\n};\n\nexport default PlaylistList;\n","import React, { useCallback } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { getUrl } from \"utils/getUrl.util\";\n\nimport PlaylistList from \"components/PlaylistList/PlaylistList.component\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\n\nimport { ISpotifyPaging } from \"interfaces/ISpotifyPaging.interface\";\nimport { ISpotifyPlaylistSimple } from \"interfaces/ISpotifyPlaylist.interface\";\n\ninterface IProps {\n  token: string | null;\n}\n\nconst PersonalConnected: React.FC<IProps> = ({ token }: IProps) => {\n  const getPlaylistList = useCallback(async () => {\n    return await getUrl<ISpotifyPaging<ISpotifyPlaylistSimple[]>>(\n      \"https://api.spotify.com/v1/me/playlists\",\n      token\n    );\n  }, [token]);\n  return <PlaylistList getSimple={getPlaylistList} />;\n};\n\nconst mapStateToProps = ({ token }: IState) => {\n  return { token };\n};\n\nconst Personal = connect(mapStateToProps)(PersonalConnected);\n\nexport default Personal;\n","import React, { useCallback } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { getUrl } from \"utils/getUrl.util\";\n\nimport PlaylistList from \"components/PlaylistList/PlaylistList.component\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\n\nimport { ISpotifyFeatured } from \"interfaces/ISpotifyFeatured.interface\";\nimport { ISpotifyError } from \"interfaces/ISpotifyError.interface\";\n\ninterface IProps {\n  token: string | null;\n}\n\nconst FeaturedConnected: React.FC<IProps> = ({ token }: IProps) => {\n  const getFeatured = useCallback(async () => {\n    const response = await getUrl<ISpotifyFeatured>(\n      \"https://api.spotify.com/v1/browse/featured-playlists\",\n      token\n    );\n    return response\n      ? !(response as ISpotifyError).status\n        ? (response as ISpotifyFeatured).playlists\n        : (response as ISpotifyError)\n      : null;\n  }, [token]);\n\n  return <PlaylistList getSimple={getFeatured} />;\n};\n\nconst mapStateToProps = ({ token }: IState) => {\n  return { token };\n};\n\nconst Featured = connect(mapStateToProps)(FeaturedConnected);\n\nexport default Featured;\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport qs from \"query-string\";\n\nimport { ISpotifyTokenResponse } from \"interfaces/ISpotifyTokenResponse.interface\";\n\nimport { setToken } from \"redux/actions/setToken.action\";\nimport { Redirect } from \"react-router\";\n\ninterface IProps {\n  token: string | null;\n  setToken: (\n    token: string | null\n  ) => {\n    type: string;\n    payload: string | null;\n  };\n}\n\nconst CallbackConnected: React.FC<IProps> = ({ setToken }: IProps) => {\n  const [redirectTo, setRedirectTo] = useState<string | null>(null);\n  useEffect(() => {\n    let cancelled = false;\n    let timeoutId: NodeJS.Timeout | null = null;\n    const params = qs.parse(window.location.hash);\n    if (params.access_token) {\n      // We know it is this type at this point so we cast to it\n      const spotifyResponse = (params as unknown) as ISpotifyTokenResponse;\n\n      // If the effect has not been cancelled we set the state\n      if (!cancelled) {\n        setToken(spotifyResponse.access_token);\n        timeoutId = setTimeout(\n          () => setToken(null),\n          Number(spotifyResponse.expires_in) * 1000\n        );\n      }\n      // Removes tokens from the url\n      if (spotifyResponse.state) {\n        setRedirectTo(spotifyResponse.state);\n      }\n    }\n    return () => {\n      cancelled = true;\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [setToken]);\n  if (redirectTo) {\n    return <Redirect to={redirectTo} />;\n  } else {\n    return <div>Redirecting...</div>;\n  }\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return { setToken: (token: string | null) => dispatch(setToken(token)) };\n};\n\nconst Callback = connect(\n  null,\n  mapDispatchToProps\n)(CallbackConnected);\n\nexport default Callback;\n","import { SET_TOKEN } from \"redux/constants/setToken.constant\";\n\nexport const setToken = (payload: string | null) => {\n  return { type: SET_TOKEN, payload };\n};\n","export const SET_TOKEN = \"setToken\";\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport qs from \"query-string\";\nimport { connect } from \"react-redux\";\n\nimport classes from \"./App.module.scss\";\n\nimport Header from \"components/Header/Header.component\";\nimport Personal from \"components/Personal/Personal.component\";\nimport Featured from \"components/Featured/Featured.component\";\nimport Callback from \"components/Callback/Callback.component\";\n\nimport { ISpotifyTokenRequest } from \"interfaces/ISpotifyTokenRequest.interface\";\n\nimport { generateSpotifyAuthUrl } from \"utils/generateSpotifyAuthUrl.util\";\n\nimport { IState } from \"redux/reducers/root.reducer\";\n\ninterface IProps {\n  token: string | null;\n}\n\nconst ConnectedApp: React.FC<IProps> = ({ token }: IProps) => {\n  useEffect(() => {\n    if (!token) {\n      const params = qs.parse(window.location.hash);\n      if (!params.access_token) {\n        const requestContents: ISpotifyTokenRequest = {\n          client_id: process.env.REACT_APP_CLIENT_ID || \"\",\n          redirect_uri: process.env.REACT_APP_REDIRECT_URI || \"\",\n          response_type: \"token\",\n          scopes: [\n            \"streaming\",\n            \"user-read-birthdate\",\n            \"user-read-email\",\n            \"user-read-private\",\n            \"playlist-read-private\"\n          ],\n          state: window.location.pathname\n        };\n        window.location.assign(generateSpotifyAuthUrl(requestContents));\n      }\n    }\n  }, [token]);\n\n  return (\n    <Router>\n      <Header />\n      <div className={classes.page}>\n        <Route exact path=\"/\" render={() => <Redirect to=\"/featured\" />} />\n        <Route path=\"/featured\" component={Featured} />\n        <Route path=\"/personal\" component={Personal} />\n        <Route path=\"/callback\" component={Callback} />\n      </div>\n    </Router>\n  );\n};\n\nconst mapStateToProps = ({ token }: IState) => {\n  return { token };\n};\n\nconst App = connect(mapStateToProps)(ConnectedApp);\n\nexport default App;\n","import { ISpotifyTokenRequest } from \"interfaces/ISpotifyTokenRequest.interface\";\n\nexport const generateSpotifyAuthUrl = ({\n  client_id,\n  redirect_uri,\n  response_type,\n  scopes,\n  show_dialog,\n  state\n}: ISpotifyTokenRequest): string => {\n  // https://developer.spotify.com/documentation/general/guides/authorization-guide/\n  // Implicit flow\n  return `https://accounts.spotify.com/authorize?client_id=${client_id}&redirect_uri=${encodeURIComponent(\n    redirect_uri\n  )}&scope=${\n    scopes ? scopes.join(\" \") : \"\"\n  }&response_type=${response_type}&state=${state ? state : \"\"}&show_dialog=${\n    show_dialog ? show_dialog : \"false\"\n  }`;\n};\n","import { SET_TOKEN } from \"redux/constants/setToken.constant\";\n\nexport interface IState {\n  token: string | null;\n}\n\ninterface IAction {\n  type: string;\n  payload: any;\n}\n\nconst initialState: IState = {\n  token: null\n};\n\nexport const rootReducer = (state = initialState, action: IAction) => {\n  if (action.type === SET_TOKEN) {\n    return { ...state, token: action.payload };\n  }\n  return state;\n};\n","import { createStore } from \"redux\";\n\nimport { rootReducer } from \"./reducers/root.reducer\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.scss\";\n\nimport App from \"components/App/App.component\";\n\nimport store from \"redux/store\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}